package Saturn.domain_models;

/*Generated by MPS */

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.io.FileNotFoundException;

public class Saturn_2_handler {

  public static String EVENT_B_MODELS_DIR_NAME = "Event_B_Models/";
  public static String EVENT_B_MODELS_FILE_EXTENSION = ".sys";
  public static String GRAPH_FILE_EXTENSION = ".puml";


  public static void main(String[] args) {


    File eventBModelFile = new File(new File(Saturn_2_handler.class.getProtectionDomain().getCodeSource().getLocation().getFile()).getParentFile(), EVENT_B_MODELS_DIR_NAME + "Saturn_2" + EVENT_B_MODELS_FILE_EXTENSION);
    File graphFile = new File(new File(Saturn_2_handler.class.getProtectionDomain().getCodeSource().getLocation().getFile()).getParentFile(), EVENT_B_MODELS_DIR_NAME + "Saturn_2" + GRAPH_FILE_EXTENSION);

    if (!(eventBModelFile.getParentFile().exists())) {
      eventBModelFile.getParentFile().mkdirs();
    }
    if (eventBModelFile.exists()) {
      eventBModelFile.delete();
      graphFile.delete();
    }
    try {
      eventBModelFile.createNewFile();
      graphFile.createNewFile();
    } catch (IOException e) {
      e.printStackTrace();
    }




    System.out.println("Path to Event-B Model File corresponding to " + "Saturn_2" + " : " + eventBModelFile);
    System.out.println("Path to graph File corresponding to " + "Saturn_2" + " : " + graphFile);

    try {
      PrintWriter pw = new PrintWriter(eventBModelFile);
      PrintWriter pwGraph = new PrintWriter(graphFile);



      pw.println("/* " + "Saturn_2" + "\n* Author: SysML/KAOS Domain Model Parser\n* Creation date: " + new SimpleDateFormat("dd/MM/yyyy").format(new Date()) + "\n*/");
      pw.println("\nREFINEMENT\nSaturn_2");
      pw.println("REFINES\nSaturn_1");

      pw.println("\nSETS");
      pw.println("");

      pw.println("\nCONSTANTS");
      pw.println("");

      pw.println("\nVARIABLES");
      pw.println("in_l, in_r");

      pw.println("\nPROPERTIES");
      pw.println("");

      pw.println("\nINVARIANT");
      pw.println("in_l : T_IN &\nin_r : T_IN &\n//logical formula p1\n(in = in_l)");

      pw.println("\nINITIALISATION");
      pw.println("in_l :: T_IN ||\nin_r :: T_IN");


      pw.println("\n\nEND");
      pw.close();

      pwGraph.println("@startuml");

      pwGraph.println("\nskinparam class {\n BackgroundColor<<association>> Darkorange \n BackgroundColor<<concept>>  Snow \n} ");



      pwGraph.println("package Saturn_1  <<Folder>> {\n}");


      pwGraph.println("package " + "Saturn_2" + " <<Folder>> {");

      pwGraph.println("	class \"Saturn_1/T_IN\" as T_IN <<concept>> \n	 object in_l <<individual>>  <<variable>> \n	T_IN *-- in_l : individualOf \n	 object in_r <<individual>>  <<variable>> \n	T_IN *-- in_r : individualOf ");


      pwGraph.println("");

      pwGraph.println("}");

      pwGraph.println("Saturn_1 <|-- Saturn_2");


      pwGraph.println("@enduml");
      pwGraph.close();


    } catch (FileNotFoundException e) {
      e.printStackTrace();
    }



  }
}
