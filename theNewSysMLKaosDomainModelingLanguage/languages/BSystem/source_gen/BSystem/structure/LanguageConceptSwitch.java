package BSystem.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Action = 0;
  public static final int BComment = 1;
  public static final int BSystemConcept = 2;
  public static final int Constant = 3;
  public static final int Context = 4;
  public static final int EnumeratedSet = 5;
  public static final int Invariant = 6;
  public static final int Predicate = 7;
  public static final int Property = 8;
  public static final int Set = 9;
  public static final int System = 10;
  public static final int Term = 11;
  public static final int Variable = 12;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xbe9c247ddd744e87L, 0x98fb8757587ebb62L);
    builder.put(0x47342804c192433cL, Action);
    builder.put(0x5b61b7c2a5e6d100L, BComment);
    builder.put(0x47342804c1924333L, BSystemConcept);
    builder.put(0x47342804c1924326L, Constant);
    builder.put(0x47342804c19242c6L, Context);
    builder.put(0x47342804c1924325L, EnumeratedSet);
    builder.put(0x47342804c1924339L, Invariant);
    builder.put(0x47342804c192432bL, Predicate);
    builder.put(0x47342804c1924338L, Property);
    builder.put(0x47342804c1924302L, Set);
    builder.put(0x47342804c19242e2L, System);
    builder.put(0x47342804c192433aL, Term);
    builder.put(0x47342804c192433bL, Variable);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
