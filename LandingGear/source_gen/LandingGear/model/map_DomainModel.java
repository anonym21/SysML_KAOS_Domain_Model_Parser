package LandingGear.model;

/*Generated by MPS */

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.io.FileNotFoundException;

public class map_DomainModel {
  public static String EVENT_B_MODELS_DIR_NAME = "Event_B_Models/";
  public static String EVENT_B_MODELS_FILE_EXTENSION = ".sys";

  public static void main(String[] args) {
    File eventBModelFile = new File(new File(map_DomainModel.class.getProtectionDomain().getCodeSource().getLocation().getFile()).getParentFile(), EVENT_B_MODELS_DIR_NAME + "landing_gear_system_ref_0" + EVENT_B_MODELS_FILE_EXTENSION);
    if (!(eventBModelFile.getParentFile().exists())) {
      eventBModelFile.getParentFile().mkdirs();
    }
    if (eventBModelFile.exists()) {
      eventBModelFile.delete();
    }
    try {
      eventBModelFile.createNewFile();
    } catch (IOException e) {
      e.printStackTrace();
    }



    System.out.println("Path to Event-B Model File corresponding to " + "landing_gear_system_ref_0" + " : " + eventBModelFile);
    try {
      PrintWriter pw = new PrintWriter(eventBModelFile);


      pw.println("/* " + "landing_gear_system_ref_0" + "\n* Author: SysML/KAOS Domain Model Parser\n* Creation date: " + new SimpleDateFormat("dd/MM/yyyy").format(new Date()) + "\n*/");
      pw.println("\nSYSTEM\nlanding_gear_system_ref_0");
      pw.println("");

      pw.println("\nSETS");
      pw.println("LandingGear; LANDING_GEAR_STATES={lg_extended, lg_retracted}");

      pw.println("\nCONSTANTS");
      pw.println("LG1, T_landingGearState, landingGearState");

      pw.println("\nVARIABLES");
      pw.println("");

      pw.println("\nPROPERTIES");
      pw.println("LG1 : LandingGear &\nLandingGear = {LG1} &\nT_landingGearState = LandingGear --> LANDING_GEAR_STATES &\nlandingGearState : T_landingGearState &\nlandingGearState = {LG1|->lg_extended} &\n//predicate p1\n!(x1, x2). ((x1 : LandingGear)) => ((x1 |-> x2 : landingGearState))");

      pw.println("\nINVARIANT");
      pw.println("");

      pw.println("\nINITIALISATION");
      pw.println("");


      pw.println("\n\nEND");
      pw.close();

    } catch (FileNotFoundException e) {
      e.printStackTrace();
    }



  }
}
