<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd;org.eventb.codegen.ui.cgConfig;de.prob.units.mchBase" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1545242720154" org.eventb.texttools.text_representation="machine bonaventure_3_mch refines bonaventure_2_mch  sees bonaventure_3_ctxt&#10;&#10;variables trafficReaded Vehicle Vehicle_Front_Position Vehicle_Travel_Lane Speed_Limit Min_Brake_Distance traffic_level Vehicle_Speed Observed_Vehicle Observed_Vehicle_Speed Observed_Vehicle_Front_Position Observed_Vehicle_Travel_Lane observed_traffic_level operating_mode Traffic_Signal_Program Sensor_Observed_Traffic_Level Sensor_Observed_Vehicle Sensor_Observed_Vehicle_Speed Is_Sensor_Detection_Available tsc_observed_traffic_level trafficReadedCGMU trafficReadedCIGC&#10;&#10;invariants&#10;  @inv1 operating_mode ∈ OPERATING_MODE&#10;  @inv2 Traffic_Signal_Program ∈ Traffic_Light_Color → ℕ&#10;  @inv3 Sensor_Observed_Traffic_Level ∈ Sensor ⇸ TRAFFIC_LEVEL&#10;  @inv4 Sensor_Observed_Vehicle ∈ Sensor ↔ VEHICLE&#10;  @inv4_1 trafficReaded = TRUE ⇒ Sensor_Observed_Vehicle ∈ Sensor ↔ Observed_Vehicle&#10;  @inv5 ∀xx·(xx∈Observed_Vehicle⇒ card(Sensor_Observed_Vehicle∼[{xx}]) ≥ 1)&#10;  @inv6 Sensor_Observed_Vehicle_Speed ∈ Sensor_Observed_Vehicle → ℕ&#10;  @inv7 Is_Sensor_Detection_Available ∈ Sensor → BOOL&#10;  @inv8 tsc_observed_traffic_level ∈ TRAFFIC_LEVEL&#10;  @inv9 Observed_Vehicle = ran(Sensor_Observed_Vehicle)&#10;  @inv10 trafficReadedCGMU ∈ BOOL&#10;  @inv11 trafficReadedCIGC ∈ BOOL&#10;  @inv12 trafficReadedCGMU=TRUE ∧ trafficReadedCIGC=TRUE ⇒ trafficReaded=TRUE&#10;  @p3_2 (operating_mode = NORMAL_MODE∧trafficReadedCIGC = TRUE) ⇒ (AID ∈ dom(Sensor_Observed_Traffic_Level) ∧ observed_traffic_level = Sensor_Observed_Traffic_Level(AID))&#10;  @p3_3 (operating_mode ∈ {DEGRADED_MODE_I,DEGRADED_MODE_II}∧trafficReadedCGMU = TRUE)&#10;  ⇒ (Sensor_Observed_Traffic_Level[VdM_Sensor] ≠ ∅&#10;  ∧ observed_traffic_level ∈ Sensor_Observed_Traffic_Level[VdM_Sensor])&#10;  @p3_4 operating_mode = NORMAL_MODE ⇒ Is_Sensor_Detection_Available(AID)  = TRUE&#10;  @p3_5 (operating_mode ∈ {DEGRADED_MODE_I,DEGRADED_MODE_II}&#10;  ⇒ Is_Sensor_Detection_Available(AID)  = FALSE)&#10;  @p3_6 ∀xx·(xx ∈ dom(Sensor_Observed_Traffic_Level)&#10;  ∧ Sensor_Observed_Traffic_Level(xx)  = NORMAL&#10;  ⇒ (((card(Sensor_Observed_Vehicle[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;  ∧ (∀yy·(yy ∈ Sensor_Observed_Vehicle[{xx}] ⇒ Sensor_Observed_Vehicle_Speed(xx ↦ yy)  ≥ 11))))&#10;  @p3_7 ∀xx·(xx ∈ dom(Sensor_Observed_Traffic_Level)&#10;  ∧ Sensor_Observed_Traffic_Level(xx)  = DENSE&#10;  ⇒ (((card(Sensor_Observed_Vehicle[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;  ∧ (∀yy·(yy ∈ Sensor_Observed_Vehicle[{xx}] ⇒ Sensor_Observed_Vehicle_Speed(xx ↦ yy)  ∈ 9‥10))))&#10;  @p3_8 ∀xx·(xx ∈ dom(Sensor_Observed_Traffic_Level)&#10;  ∧ Sensor_Observed_Traffic_Level(xx)  = SLOWED&#10;  ⇒ (((card(Sensor_Observed_Vehicle[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;  ∧ (∀yy·(yy ∈ Sensor_Observed_Vehicle[{xx}] ⇒ Sensor_Observed_Vehicle_Speed(xx ↦ yy)  ∈ 7‥8))))&#10;  @p3_9 ∀xx·(xx ∈ dom(Sensor_Observed_Traffic_Level)&#10;  ∧ Sensor_Observed_Traffic_Level(xx)  = CONGESTION&#10;  ⇒ (((card(Sensor_Observed_Vehicle[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;  ∧ (∀yy·(yy ∈ Sensor_Observed_Vehicle[{xx}] ⇒ Sensor_Observed_Vehicle_Speed(xx ↦ yy)  &lt; 7))))&#10;  @p3_10 trafficReadedCGMU = TRUE ⇒ ((VdM_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Vehicle ∈ VdM_Sensor ↔ Vehicle&#10;  @p3_11 trafficReadedCIGC = TRUE ⇒ ((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Vehicle ∈ MtQ_Sensor ↔ Vehicle&#10;  @p3_12 ∀xx,yy·((xx ∈ dom(Sensor_Observed_Traffic_Level)∩((VdM_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}]) ∧ yy ∈ Sensor_Observed_Vehicle[{xx}]∧trafficReadedCGMU = TRUE) ⇒ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)  ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅ )&#10;  @p3_13 ∀xx,yy·((xx ∈ dom(Sensor_Observed_Traffic_Level)∩((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}]) ∧ yy ∈ Sensor_Observed_Vehicle[{xx}]∧trafficReadedCIGC = TRUE) ⇒ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)  ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅ )&#10;  @p3_14 ∀xx,yy·((xx ∈ dom(Sensor_Observed_Traffic_Level)∩(Is_Sensor_Detection_Available∼[{TRUE}]) ∧ yy ∈ Sensor_Observed_Vehicle[{xx}]∧trafficReaded = TRUE) ⇒ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)  ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅ )&#10;&#10;&#10;&#10;events&#10;  event INITIALISATION extends INITIALISATION&#10;    then&#10;      @act15 operating_mode ≔ NORMAL_MODE&#10;      @act16 Traffic_Signal_Program ≔ Traffic_Light_Color × {10}&#10;      @act17 Sensor_Observed_Traffic_Level ≔ Sensor ×{NORMAL}&#10;      @act18 Sensor_Observed_Vehicle ≔ ∅&#10;      @act19 Sensor_Observed_Vehicle_Speed ≔ ∅&#10;      @act20 Is_Sensor_Detection_Available ≔ Sensor ×{TRUE}&#10;      @act21 tsc_observed_traffic_level ≔ NORMAL&#10;      @act22 trafficReadedCGMU ≔  FALSE&#10;      @act23 trafficReadedCIGC ≔  FALSE&#10;  end&#10;&#10;  event ctrl_BringVehicleInsideTunnel extends ctrl_BringVehicleInsideTunnel&#10;  then&#10;      @act7 trafficReadedCGMU ≔ FALSE&#10;      @act8 trafficReadedCIGC ≔ FALSE&#10;  end&#10;&#10;  event ctrl_ChangeSpeed extends ctrl_ChangeSpeed&#10;  end&#10;&#10;  event MoveVehicle extends MoveVehicle&#10;  then&#10;      @act7 trafficReadedCGMU ≔ FALSE&#10;      @act8 trafficReadedCIGC ≔ FALSE&#10;  end&#10;&#10;  event DetermineTrafficLevelFromVdMSensors refines DetermineTrafficLevel&#10;    any observedTrafficLevel observedVehicles observedSpeeds observedFrontPositions observedTravelLanes vdmSensors&#10;    sensorObservedVehicles  sensorObservedVehicleSpeeds sensorObservedTrafficLevels&#10;    where&#10;      @grd0 vdmSensors =  (VdM_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}]&#10;      @grd0_1 vdmSensors ≠ ∅&#10;      @grd0_2 operating_mode∈{DEGRADED_MODE_I,DEGRADED_MODE_II}&#10;      @grd1 sensorObservedVehicles ⊆  vdmSensors×Vehicle&#10;      theorem @theo1 finite(sensorObservedVehicles)&#10;      @grd2 Vehicle ≠ ∅ ⇒ sensorObservedVehicles ≠ ∅&#10;      @grd3 ∀xx,yy·(xx ∈ dom(sensorObservedVehicles) ∧ yy ∈ sensorObservedVehicles[{xx}]&#10;      ⇒ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)&#10;      ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅)&#10;      @grd3_1 ∀xx,yy·((xx ∈ vdmSensors ∧ yy ∈ Vehicle ∧ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)  ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅) ⇒ (xx ∈ dom(sensorObservedVehicles) ∧ yy ∈ sensorObservedVehicles[{xx}] ))&#10;      /*@grd4 updatedSensorObservedVehicles = (Sensor_Observed_VehiclesensorObservedVehicles)*/&#10;      @grd4 observedVehicles ⊆  Vehicle&#10;      theorem @theo2 finite(observedVehicles)&#10;      @grd5 trafficReadedCIGC = FALSE ⇒ observedVehicles =  ran(sensorObservedVehicles)  // lecture du trafic&#10;      @grd5_1 trafficReadedCIGC = TRUE ⇒ observedVehicles =  ran(sensorObservedVehicles) ∪ ran(((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Vehicle)  // lecture du trafic&#10;      @grd6 sensorObservedVehicleSpeeds = (λ(xx↦yy)·(xx↦yy∈sensorObservedVehicles)∣Vehicle_Speed(yy))&#10;      @grd7_0 sensorObservedTrafficLevels∈ vdmSensors → TRAFFIC_LEVEL&#10;      @grd7 ∀xx·(xx ∈ dom(sensorObservedTrafficLevels)&#10;      ∧ sensorObservedTrafficLevels(xx)  = NORMAL&#10;      ⇒ (((card(sensorObservedVehicles[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;      ∧ ( ∀yy·(yy ∈ sensorObservedVehicles[{xx}] ⇒ sensorObservedVehicleSpeeds(xx ↦ yy)  ≥ 11) ) ) )&#10;      @grd8 ∀xx·(xx ∈ dom(sensorObservedTrafficLevels)&#10;      ∧ sensorObservedTrafficLevels(xx)  = DENSE&#10;      ⇒ (((card(sensorObservedVehicles[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;      ∧ ( ∀yy·(yy ∈ sensorObservedVehicles[{xx}] ⇒ sensorObservedVehicleSpeeds(xx ↦ yy)  ∈ 9‥10) ) ) )&#10;      @grd9 ∀xx·(xx ∈ dom(sensorObservedTrafficLevels)&#10;      ∧ sensorObservedTrafficLevels(xx)  = SLOWED&#10;      ⇒ (((card(sensorObservedVehicles[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;      ∧ ( ∀yy·(yy ∈ sensorObservedVehicles[{xx}] ⇒ sensorObservedVehicleSpeeds(xx ↦ yy)  ∈ 7‥8) ) ) )&#10;      @grd10 ∀xx·(xx ∈ dom(sensorObservedTrafficLevels)&#10;      ∧ sensorObservedTrafficLevels(xx)  = CONGESTION&#10;      ⇒ (((card(sensorObservedVehicles[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;      ∧ ( ∀yy·(yy ∈ sensorObservedVehicles[{xx}] ⇒ sensorObservedVehicleSpeeds(xx ↦ yy)  &lt; 7) ) ) )&#10;      @grd11 observedSpeeds =  observedVehicles◁Vehicle_Speed // lecture de la vitesse des vehicules&#10;      @grd12 observedFrontPositions = observedVehicles◁Vehicle_Front_Position // lecture du trafic&#10;      @grd13 observedTravelLanes = observedVehicles◁Vehicle_Travel_Lane // lecture du trafic&#10;      @grd14 observedTrafficLevel ∈ TRAFFIC_LEVEL&#10;      @grd15 observedTrafficLevel ∈ ran(sensorObservedTrafficLevels)&#10;       @grd16 observedTrafficLevel = NORMAL&#10;      ⇒  (((card(observedVehicles) ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;      ∧ ( ∀xx·(xx ∈ observedVehicles ⇒ observedSpeeds(xx)  ≥ 11) )) // determination du niveau de trafic&#10;      @grd17 observedTrafficLevel = DENSE&#10;      ⇒  (((card(observedVehicles) ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;      ∧ ( ∀xx·(xx ∈ observedVehicles ⇒ observedSpeeds(xx)  ∈ 9‥10) ))&#10;      @grd18 observedTrafficLevel = SLOWED&#10;      ⇒  (((card(observedVehicles) ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;      ∧ ( ∀xx·(xx ∈ observedVehicles ⇒ observedSpeeds(xx)  ∈ 7‥8) ))&#10;      @grd19 observedTrafficLevel = CONGESTION&#10;      ⇒  (((card(observedVehicles) ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;      ∧ ( ∀xx·(xx ∈ observedVehicles ⇒ observedSpeeds(xx)  &lt; 7) ))&#10;&#10;    then&#10;      @act1 Observed_Vehicle ≔  observedVehicles&#10;      @act2 Observed_Vehicle_Speed ≔  observedSpeeds&#10;      @act3 Observed_Vehicle_Front_Position ≔  observedFrontPositions&#10;      @act4 Observed_Vehicle_Travel_Lane ≔  observedTravelLanes&#10;      @act5 observed_traffic_level ≔ observedTrafficLevel&#10;      @act6 trafficReadedCGMU  ≔ TRUE&#10;      /* @act7 Sensor_Observed_Traffic_Level ≔ Sensor_Observed_Traffic_LevelsensorObservedTrafficLevels */&#10;      @act7 Sensor_Observed_Traffic_Level ≔ ({TRUE↦(((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Traffic_Level) ∪ sensorObservedTrafficLevels, FALSE ↦sensorObservedTrafficLevels })(bool(trafficReadedCIGC = TRUE))&#10;      /* @act8 Sensor_Observed_Vehicle ≔ (vdmSensors⩤Sensor_Observed_Vehicle)∪ sensorObservedVehicles */&#10;      @act8 Sensor_Observed_Vehicle ≔ ({TRUE↦(((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Vehicle) ∪ sensorObservedVehicles, FALSE ↦sensorObservedVehicles })(bool(trafficReadedCIGC = TRUE))&#10;      /* @act9 Sensor_Observed_Vehicle_Speed ≔ ((vdmSensors × VEHICLE)⩤Sensor_Observed_Vehicle_Speed)∪ sensorObservedVehicleSpeeds*/&#10;      @act9 Sensor_Observed_Vehicle_Speed ≔ ({TRUE↦((((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])× VEHICLE)◁Sensor_Observed_Vehicle_Speed) ∪ sensorObservedVehicleSpeeds, FALSE ↦sensorObservedVehicleSpeeds })(bool(trafficReadedCIGC = TRUE))&#10;      @act10 trafficReaded  ≔ bool(trafficReadedCIGC=TRUE)&#10;  end&#10;&#10;  event CommunicateTrafficLeveltoTrafficSignalController refines RegulateTrafficLevel&#10;    any trafficLevel&#10;    where&#10;      @grd0 trafficLevel ∈ Sensor_Observed_Traffic_Level[VdM_Sensor]&#10;    then&#10;      @act0 tsc_observed_traffic_level ≔ trafficLevel&#10;  end&#10;&#10;  event ApplyAppropriateTrafficSignalProgram refines SuperviseTrafficLevel RegulateTrafficLevel&#10;    any trafficSignalProgram&#10;    where&#10;      @grd0 trafficSignalProgram ∈ Traffic_Light_Color → ℕ //a partir de la table d'association entre niveau de trafic et plan de feux, il sera possible de specifier le plan de feux correspondant a chaque etat du trafic&#10;    then&#10;      @act0 Traffic_Signal_Program ≔ trafficSignalProgram&#10;  end&#10;&#10;  event SuperviseTrafficLevelinNormalMode refines SuperviseTrafficLevel&#10;    where&#10;      @grd0 operating_mode = NORMAL_MODE&#10;  end&#10;&#10;  event SuperviseTrafficLevelinDegradedMode1 refines SuperviseTrafficLevel&#10;    where&#10;      @grd0 operating_mode = DEGRADED_MODE_I&#10;  end&#10;&#10;  event SuperviseTrafficLevelinDegradedMode2 refines SuperviseTrafficLevel&#10;    where&#10;      @grd0 operating_mode = DEGRADED_MODE_II&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.refinesMachine name="'" org.eventb.core.target="bonaventure_2_mch"/>
<org.eventb.core.seesContext name="_uNirAOkhEei2Zb4EspZEew" org.eventb.core.target="bonaventure_3_ctxt"/>
<org.eventb.core.variable name="_NUnU8OhXEeiFb9vuOXZGkg" org.eventb.core.generated="false" org.eventb.core.identifier="trafficReaded"/>
<org.eventb.core.variable name="_NUnU8uhXEeiFb9vuOXZGkg" org.eventb.core.generated="false" org.eventb.core.identifier="Vehicle"/>
<org.eventb.core.variable name="_NUnU8-hXEeiFb9vuOXZGkg" org.eventb.core.generated="false" org.eventb.core.identifier="Vehicle_Front_Position"/>
<org.eventb.core.variable name="_NUnU9OhXEeiFb9vuOXZGkg" org.eventb.core.generated="false" org.eventb.core.identifier="Vehicle_Travel_Lane"/>
<org.eventb.core.variable name="_NUnU9ehXEeiFb9vuOXZGkg" org.eventb.core.generated="false" org.eventb.core.identifier="Speed_Limit"/>
<org.eventb.core.variable name="_NUnU9uhXEeiFb9vuOXZGkg" org.eventb.core.generated="false" org.eventb.core.identifier="Min_Brake_Distance"/>
<org.eventb.core.variable name="_xuCWQOkhEei2Zb4EspZEew" org.eventb.core.generated="false" org.eventb.core.identifier="traffic_level"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="_xuCWQOkhEei2Zb4EspZEe}" org.eventb.core.generated="false" org.eventb.core.identifier="Vehicle_Speed"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="_xuCWQOkhEei2Zb4EspZEe~" org.eventb.core.generated="false" org.eventb.core.identifier="Observed_Vehicle"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="_xuCWQOkhEei2Zb4EspZEf'" org.eventb.core.generated="false" org.eventb.core.identifier="Observed_Vehicle_Speed"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="_xuCWQOkhEei2Zb4EspZEf(" org.eventb.core.generated="false" org.eventb.core.identifier="Observed_Vehicle_Front_Position"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="_xuCWQOkhEei2Zb4EspZEf)" org.eventb.core.generated="false" org.eventb.core.identifier="Observed_Vehicle_Travel_Lane"/>
<org.eventb.core.variable name="_ukvyQO3QEeiJ5MssfLIKhw" org.eventb.core.generated="false" org.eventb.core.identifier="observed_traffic_level"/>
<org.eventb.core.event name="_xuCWQOkhEei2Zb4EspZEf*" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="'" org.eventb.core.assignment="operating_mode ≔ NORMAL_MODE" org.eventb.core.generated="false" org.eventb.core.label="act15"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="Traffic_Signal_Program ≔ Traffic_Light_Color × {10}" org.eventb.core.generated="false" org.eventb.core.label="act16"/>
<org.eventb.core.action name=")" org.eventb.core.assignment="Sensor_Observed_Traffic_Level ≔ Sensor ×{NORMAL}" org.eventb.core.generated="false" org.eventb.core.label="act17"/>
<org.eventb.core.action name="*" org.eventb.core.assignment="Sensor_Observed_Vehicle ≔ ∅" org.eventb.core.generated="false" org.eventb.core.label="act18"/>
<org.eventb.core.action name="+" org.eventb.core.assignment="Sensor_Observed_Vehicle_Speed ≔ ∅" org.eventb.core.generated="false" org.eventb.core.label="act19"/>
<org.eventb.core.action name="," org.eventb.core.assignment="Is_Sensor_Detection_Available ≔ Sensor ×{TRUE}" org.eventb.core.generated="false" org.eventb.core.label="act20"/>
<org.eventb.core.action name="-" org.eventb.core.assignment="tsc_observed_traffic_level ≔ NORMAL" org.eventb.core.generated="false" org.eventb.core.label="act21"/>
<org.eventb.core.action name="_Twxxcvj9EeiDfsaie0O57A" org.eventb.core.assignment="trafficReadedCGMU ≔  FALSE" org.eventb.core.generated="false" org.eventb.core.label="act22"/>
<org.eventb.core.action name="_Twxxc_j9EeiDfsaie0O57A" org.eventb.core.assignment="trafficReadedCIGC ≔  FALSE" org.eventb.core.generated="false" org.eventb.core.label="act23"/>
</org.eventb.core.event>
<org.eventb.core.event name="_xuCWQOkhEei2Zb4EspZEf+" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="ctrl_BringVehicleInsideTunnel">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="ctrl_BringVehicleInsideTunnel"/>
<org.eventb.core.action name="_TwyYgPj9EeiDfsaie0O57A" org.eventb.core.assignment="trafficReadedCGMU ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act7"/>
<org.eventb.core.action name="_TwyYgfj9EeiDfsaie0O57A" org.eventb.core.assignment="trafficReadedCIGC ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act8"/>
</org.eventb.core.event>
<org.eventb.core.event name="_xuCWQOkhEei2Zb4EspZEf," org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="ctrl_ChangeSpeed">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="ctrl_ChangeSpeed"/>
</org.eventb.core.event>
<org.eventb.core.event name="_xuCWQOkhEei2Zb4EspZEf-" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="MoveVehicle">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="MoveVehicle"/>
<org.eventb.core.action name="_TwyYgvj9EeiDfsaie0O57A" org.eventb.core.assignment="trafficReadedCGMU ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act7"/>
<org.eventb.core.action name="_TwyYg_j9EeiDfsaie0O57A" org.eventb.core.assignment="trafficReadedCIGC ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act8"/>
</org.eventb.core.event>
<org.eventb.core.event name="_xuCWQOkhEei2Zb4EspZEf." org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="DetermineTrafficLevelFromVdMSensors">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="DetermineTrafficLevel"/>
<org.eventb.core.parameter name="_TwuuIPj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="observedTrafficLevel"/>
<org.eventb.core.parameter name="_TwuuIfj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="observedVehicles"/>
<org.eventb.core.parameter name="_TwuuIvj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="observedSpeeds"/>
<org.eventb.core.parameter name="_TwuuI_j9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="observedFrontPositions"/>
<org.eventb.core.parameter name="_TwvVMPj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="observedTravelLanes"/>
<org.eventb.core.parameter name="_TwvVMfj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="vdmSensors"/>
<org.eventb.core.parameter name="_TwvVMvj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="sensorObservedVehicles"/>
<org.eventb.core.guard name="_TwvVM_j9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd0" org.eventb.core.predicate="vdmSensors =  (VdM_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}]"/>
<org.eventb.core.guard name="_Twv8QPj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd0_1" org.eventb.core.predicate="vdmSensors ≠ ∅"/>
<org.eventb.core.guard name="_Twv8Qfj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd0_2" org.eventb.core.predicate="operating_mode∈{DEGRADED_MODE_I,DEGRADED_MODE_II}"/>
<org.eventb.core.guard name="_TwwjUPj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="sensorObservedVehicles ⊆  vdmSensors×Vehicle"/>
<org.eventb.core.guard name="_TwwjUfj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="theo1" org.eventb.core.predicate="finite(sensorObservedVehicles)" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_TwwjUvj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="Vehicle ≠ ∅ ⇒ sensorObservedVehicles ≠ ∅"/>
<org.eventb.core.guard name="_TwxKYPj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="∀xx,yy·(xx ∈ dom(sensorObservedVehicles) ∧ yy ∈ sensorObservedVehicles[{xx}]&#10;      ⇒ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)&#10;      ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅)"/>
<org.eventb.core.guard name="_TwxKYfj9EeiDfsaie0O57A" org.eventb.core.comment="@grd4 updatedSensorObservedVehicles = (Sensor_Observed_VehiclesensorObservedVehicles)" org.eventb.core.generated="false" org.eventb.core.label="grd3_1" org.eventb.core.predicate="∀xx,yy·((xx ∈ vdmSensors ∧ yy ∈ Vehicle ∧ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)  ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅) ⇒ (xx ∈ dom(sensorObservedVehicles) ∧ yy ∈ sensorObservedVehicles[{xx}] ))"/>
<org.eventb.core.guard name="_TwxKYvj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="observedVehicles ⊆  Vehicle"/>
<org.eventb.core.guard name="_TwxxcPj9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="theo2" org.eventb.core.predicate="finite(observedVehicles)" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_Twxxcfj9EeiDfsaie0O57A" org.eventb.core.comment="lecture du trafic" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="trafficReadedCIGC = FALSE ⇒ observedVehicles =  ran(sensorObservedVehicles)"/>
<org.eventb.core.parameter name="_3RXWAPm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="sensorObservedVehicleSpeeds"/>
<org.eventb.core.parameter name="_3RXWAfm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="sensorObservedTrafficLevels"/>
<org.eventb.core.guard name="_3RXWA_m2EeiDfsaie0O57A" org.eventb.core.comment="lecture du trafic" org.eventb.core.generated="false" org.eventb.core.label="grd5_1" org.eventb.core.predicate="trafficReadedCIGC = TRUE ⇒ observedVehicles =  ran(sensorObservedVehicles) ∪ ran(((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Vehicle)"/>
<org.eventb.core.guard name="_3RXWBPm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="sensorObservedVehicleSpeeds = (λ(xx↦yy)·(xx↦yy∈sensorObservedVehicles)∣Vehicle_Speed(yy))"/>
<org.eventb.core.guard name="_3RX9EPm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd7_0" org.eventb.core.predicate="sensorObservedTrafficLevels∈ vdmSensors → TRAFFIC_LEVEL"/>
<org.eventb.core.guard name="_3RX9Efm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd7" org.eventb.core.predicate="∀xx·(xx ∈ dom(sensorObservedTrafficLevels)&#10;      ∧ sensorObservedTrafficLevels(xx)  = NORMAL&#10;      ⇒ (((card(sensorObservedVehicles[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;      ∧ ( ∀yy·(yy ∈ sensorObservedVehicles[{xx}] ⇒ sensorObservedVehicleSpeeds(xx ↦ yy)  ≥ 11) ) ) )"/>
<org.eventb.core.guard name="_3RX9Evm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd8" org.eventb.core.predicate="∀xx·(xx ∈ dom(sensorObservedTrafficLevels)&#10;      ∧ sensorObservedTrafficLevels(xx)  = DENSE&#10;      ⇒ (((card(sensorObservedVehicles[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;      ∧ ( ∀yy·(yy ∈ sensorObservedVehicles[{xx}] ⇒ sensorObservedVehicleSpeeds(xx ↦ yy)  ∈ 9‥10) ) ) )"/>
<org.eventb.core.action name="_3RX9E_m2EeiDfsaie0O57A" org.eventb.core.assignment="Observed_Vehicle ≔  observedVehicles" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_3RX9FPm2EeiDfsaie0O57A" org.eventb.core.assignment="Observed_Vehicle_Speed ≔  observedSpeeds" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_3RYkIPm2EeiDfsaie0O57A" org.eventb.core.assignment="Observed_Vehicle_Front_Position ≔  observedFrontPositions" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
<org.eventb.core.guard name="_3RYkIvm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd9" org.eventb.core.predicate="∀xx·(xx ∈ dom(sensorObservedTrafficLevels)&#10;      ∧ sensorObservedTrafficLevels(xx)  = SLOWED&#10;      ⇒ (((card(sensorObservedVehicles[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;      ∧ ( ∀yy·(yy ∈ sensorObservedVehicles[{xx}] ⇒ sensorObservedVehicleSpeeds(xx ↦ yy)  ∈ 7‥8) ) ) )"/>
<org.eventb.core.action name="_3RYkI_m2EeiDfsaie0O57A" org.eventb.core.assignment="Observed_Vehicle_Travel_Lane ≔  observedTravelLanes" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
<org.eventb.core.action name="_3RZLM_m2EeiDfsaie0O57A" org.eventb.core.assignment="observed_traffic_level ≔ observedTrafficLevel" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
<org.eventb.core.action name="_LhuL4ALuEemie74np5lKrw" org.eventb.core.assignment="trafficReadedCGMU  ≔ TRUE" org.eventb.core.comment="@act7 Sensor_Observed_Traffic_Level ≔ Sensor_Observed_Traffic_LevelsensorObservedTrafficLevels " org.eventb.core.generated="false" org.eventb.core.label="act6"/>
<org.eventb.core.action name="_LhuL4QLuEemie74np5lKrw" org.eventb.core.assignment="Sensor_Observed_Traffic_Level ≔ ({TRUE↦(((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Traffic_Level) ∪ sensorObservedTrafficLevels, FALSE ↦sensorObservedTrafficLevels })(bool(trafficReadedCIGC = TRUE))" org.eventb.core.comment="@act8 Sensor_Observed_Vehicle ≔ (vdmSensors⩤Sensor_Observed_Vehicle)∪ sensorObservedVehicles " org.eventb.core.generated="false" org.eventb.core.label="act7"/>
<org.eventb.core.action name="_eNIFoALvEemie74np5lKrw" org.eventb.core.assignment="Sensor_Observed_Vehicle ≔ ({TRUE↦(((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Vehicle) ∪ sensorObservedVehicles, FALSE ↦sensorObservedVehicles })(bool(trafficReadedCIGC = TRUE))" org.eventb.core.comment="@act9 Sensor_Observed_Vehicle_Speed ≔ ((vdmSensors × VEHICLE)⩤Sensor_Observed_Vehicle_Speed)∪ sensorObservedVehicleSpeeds" org.eventb.core.generated="false" org.eventb.core.label="act8"/>
<org.eventb.core.action name="_eNIFoQLvEemie74np5lKrw" org.eventb.core.assignment="Sensor_Observed_Vehicle_Speed ≔ ({TRUE↦((((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])× VEHICLE)◁Sensor_Observed_Vehicle_Speed) ∪ sensorObservedVehicleSpeeds, FALSE ↦sensorObservedVehicleSpeeds })(bool(trafficReadedCIGC = TRUE))" org.eventb.core.generated="false" org.eventb.core.label="act9"/>
<org.eventb.core.action name="_eNIFogLvEemie74np5lKrw" org.eventb.core.assignment="trafficReaded  ≔ bool(trafficReadedCIGC=TRUE)" org.eventb.core.generated="false" org.eventb.core.label="act10"/>
<org.eventb.core.guard name="_3RZLMvm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd10" org.eventb.core.predicate="∀xx·(xx ∈ dom(sensorObservedTrafficLevels)&#10;      ∧ sensorObservedTrafficLevels(xx)  = CONGESTION&#10;      ⇒ (((card(sensorObservedVehicles[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;      ∧ ( ∀yy·(yy ∈ sensorObservedVehicles[{xx}] ⇒ sensorObservedVehicleSpeeds(xx ↦ yy)  &lt; 7) ) ) )"/>
<org.eventb.core.guard name="_3Rc1kfm2EeiDfsaie0O57A" org.eventb.core.comment="lecture de la vitesse des vehicules" org.eventb.core.generated="false" org.eventb.core.label="grd11" org.eventb.core.predicate="observedSpeeds =  observedVehicles◁Vehicle_Speed"/>
<org.eventb.core.guard name="_3Rc1lPm2EeiDfsaie0O57A" org.eventb.core.comment="lecture du trafic" org.eventb.core.generated="false" org.eventb.core.label="grd12" org.eventb.core.predicate="observedFrontPositions = observedVehicles◁Vehicle_Front_Position"/>
<org.eventb.core.guard name="_3Rdcofm2EeiDfsaie0O57A" org.eventb.core.comment="lecture du trafic" org.eventb.core.generated="false" org.eventb.core.label="grd13" org.eventb.core.predicate="observedTravelLanes = observedVehicles◁Vehicle_Travel_Lane"/>
<org.eventb.core.guard name="_gUC-QPp9EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="grd14" org.eventb.core.predicate="observedTrafficLevel ∈ TRAFFIC_LEVEL"/>
<org.eventb.core.guard name="_CZpv8AL1Eemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="grd15" org.eventb.core.predicate="observedTrafficLevel ∈ ran(sensorObservedTrafficLevels)"/>
<org.eventb.core.guard name="_whN5UAL1Eemie74np5lKrw" org.eventb.core.comment="determination du niveau de trafic" org.eventb.core.generated="false" org.eventb.core.label="grd16" org.eventb.core.predicate="observedTrafficLevel = NORMAL&#10;      ⇒  (((card(observedVehicles) ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;      ∧ ( ∀xx·(xx ∈ observedVehicles ⇒ observedSpeeds(xx)  ≥ 11) ))"/>
<org.eventb.core.guard name="_YNMwQAL_Eemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="grd17" org.eventb.core.predicate="observedTrafficLevel = DENSE&#10;      ⇒  (((card(observedVehicles) ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;      ∧ ( ∀xx·(xx ∈ observedVehicles ⇒ observedSpeeds(xx)  ∈ 9‥10) ))"/>
<org.eventb.core.guard name="_lC2iIAMBEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="grd18" org.eventb.core.predicate="observedTrafficLevel = SLOWED&#10;      ⇒  (((card(observedVehicles) ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;      ∧ ( ∀xx·(xx ∈ observedVehicles ⇒ observedSpeeds(xx)  ∈ 7‥8) ))"/>
<org.eventb.core.guard name="_L31HUAMFEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="grd19" org.eventb.core.predicate="observedTrafficLevel = CONGESTION&#10;      ⇒  (((card(observedVehicles) ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;      ∧ ( ∀xx·(xx ∈ observedVehicles ⇒ observedSpeeds(xx)  &lt; 7) ))"/>
</org.eventb.core.event>
<org.eventb.core.event name="_xuCWQOkhEei2Zb4EspZEf/" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="CommunicateTrafficLeveltoTrafficSignalController">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="RegulateTrafficLevel"/>
<org.eventb.core.parameter name="_3RXWAvm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="trafficLevel"/>
<org.eventb.core.action name="_eNIssALvEemie74np5lKrw" org.eventb.core.assignment="tsc_observed_traffic_level ≔ trafficLevel" org.eventb.core.generated="false" org.eventb.core.label="act0"/>
<org.eventb.core.guard name="_L31HUQMFEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="grd0" org.eventb.core.predicate="trafficLevel ∈ Sensor_Observed_Traffic_Level[VdM_Sensor]"/>
</org.eventb.core.event>
<org.eventb.core.event name="_xuCWQOkhEei2Zb4EspZEf0" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="ApplyAppropriateTrafficSignalProgram">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="SuperviseTrafficLevel"/>
<org.eventb.core.refinesEvent name="_3RZLMPm2EeiDfsaie0O57A" org.eventb.core.target="RegulateTrafficLevel"/>
<org.eventb.core.parameter name="_3RYkIfm2EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.identifier="trafficSignalProgram"/>
<org.eventb.core.action name="_eNIssQLvEemie74np5lKrw" org.eventb.core.assignment="Traffic_Signal_Program ≔ trafficSignalProgram" org.eventb.core.generated="false" org.eventb.core.label="act0"/>
<org.eventb.core.guard name="_L31HUgMFEemie74np5lKrw" org.eventb.core.comment="a partir de la table d'association entre niveau de trafic et plan de feux, il sera possible de specifier le plan de feux correspondant a chaque etat du trafic" org.eventb.core.generated="false" org.eventb.core.label="grd0" org.eventb.core.predicate="trafficSignalProgram ∈ Traffic_Light_Color → ℕ"/>
</org.eventb.core.event>
<org.eventb.core.variable name="_1Uq3YPgXEeiJ5MssfLIKhw" org.eventb.core.generated="false" org.eventb.core.identifier="operating_mode"/>
<org.eventb.core.variable name="_1Uq3YfgXEeiJ5MssfLIKhw" org.eventb.core.generated="false" org.eventb.core.identifier="Traffic_Signal_Program"/>
<org.eventb.core.variable name="_1Uq3YvgXEeiJ5MssfLIKhw" org.eventb.core.generated="false" org.eventb.core.identifier="Sensor_Observed_Traffic_Level"/>
<org.eventb.core.variable name="_1Uq3Y_gXEeiJ5MssfLIKhw" org.eventb.core.generated="false" org.eventb.core.identifier="Sensor_Observed_Vehicle"/>
<org.eventb.core.variable name="_1Uq3ZPgXEeiJ5MssfLIKhw" org.eventb.core.generated="false" org.eventb.core.identifier="Sensor_Observed_Vehicle_Speed"/>
<org.eventb.core.variable name="_1Uq3ZfgXEeiJ5MssfLIKhw" org.eventb.core.generated="false" org.eventb.core.identifier="Is_Sensor_Detection_Available"/>
<org.eventb.core.variable name="_1Uq3ZvgXEeiJ5MssfLIKhw" org.eventb.core.generated="false" org.eventb.core.identifier="tsc_observed_traffic_level"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf1" org.eventb.core.generated="false" org.eventb.core.label="inv1" org.eventb.core.predicate="operating_mode ∈ OPERATING_MODE"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf2" org.eventb.core.generated="false" org.eventb.core.label="inv2" org.eventb.core.predicate="Traffic_Signal_Program ∈ Traffic_Light_Color → ℕ"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf3" org.eventb.core.generated="false" org.eventb.core.label="inv3" org.eventb.core.predicate="Sensor_Observed_Traffic_Level ∈ Sensor ⇸ TRAFFIC_LEVEL"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf4" org.eventb.core.generated="false" org.eventb.core.label="inv4" org.eventb.core.predicate="Sensor_Observed_Vehicle ∈ Sensor ↔ VEHICLE"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf5" org.eventb.core.generated="false" org.eventb.core.label="inv4_1" org.eventb.core.predicate="trafficReaded = TRUE ⇒ Sensor_Observed_Vehicle ∈ Sensor ↔ Observed_Vehicle"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf6" org.eventb.core.generated="false" org.eventb.core.label="inv5" org.eventb.core.predicate="∀xx·(xx∈Observed_Vehicle⇒ card(Sensor_Observed_Vehicle∼[{xx}]) ≥ 1)"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf7" org.eventb.core.generated="false" org.eventb.core.label="inv6" org.eventb.core.predicate="Sensor_Observed_Vehicle_Speed ∈ Sensor_Observed_Vehicle → ℕ"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf8" org.eventb.core.generated="false" org.eventb.core.label="inv7" org.eventb.core.predicate="Is_Sensor_Detection_Available ∈ Sensor → BOOL"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf9" org.eventb.core.generated="false" org.eventb.core.label="inv8" org.eventb.core.predicate="tsc_observed_traffic_level ∈ TRAFFIC_LEVEL"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf:" org.eventb.core.generated="false" org.eventb.core.label="inv9" org.eventb.core.predicate="Observed_Vehicle = ran(Sensor_Observed_Vehicle)"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf;" org.eventb.core.generated="false" org.eventb.core.label="inv10" org.eventb.core.predicate="trafficReadedCGMU ∈ BOOL"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf=" org.eventb.core.generated="false" org.eventb.core.label="inv11" org.eventb.core.predicate="trafficReadedCIGC ∈ BOOL"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf&gt;" org.eventb.core.generated="false" org.eventb.core.label="inv12" org.eventb.core.predicate="trafficReadedCGMU=TRUE ∧ trafficReadedCIGC=TRUE ⇒ trafficReaded=TRUE"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf?" org.eventb.core.generated="false" org.eventb.core.label="p3_2" org.eventb.core.predicate="(operating_mode = NORMAL_MODE∧trafficReadedCIGC = TRUE) ⇒ (AID ∈ dom(Sensor_Observed_Traffic_Level) ∧ observed_traffic_level = Sensor_Observed_Traffic_Level(AID))"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEf@" org.eventb.core.generated="false" org.eventb.core.label="p3_3" org.eventb.core.predicate="(operating_mode ∈ {DEGRADED_MODE_I,DEGRADED_MODE_II}∧trafficReadedCGMU = TRUE)&#10;  ⇒ (Sensor_Observed_Traffic_Level[VdM_Sensor] ≠ ∅&#10;  ∧ observed_traffic_level ∈ Sensor_Observed_Traffic_Level[VdM_Sensor])"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEfA" org.eventb.core.generated="false" org.eventb.core.label="p3_4" org.eventb.core.predicate="operating_mode = NORMAL_MODE ⇒ Is_Sensor_Detection_Available(AID)  = TRUE"/>
<org.eventb.core.invariant name="_xuCWQOkhEei2Zb4EspZEfB" org.eventb.core.generated="false" org.eventb.core.label="p3_5" org.eventb.core.predicate="(operating_mode ∈ {DEGRADED_MODE_I,DEGRADED_MODE_II}&#10;  ⇒ Is_Sensor_Detection_Available(AID)  = FALSE)"/>
<org.eventb.core.event name="_3RcOgPm2EeiDfsaie0O57A" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="SuperviseTrafficLevelinNormalMode">
<org.eventb.core.refinesEvent name="_3Rc1kPm2EeiDfsaie0O57A" org.eventb.core.target="SuperviseTrafficLevel"/>
<org.eventb.core.guard name="_9l5n4AMGEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="grd0" org.eventb.core.predicate="operating_mode = NORMAL_MODE"/>
</org.eventb.core.event>
<org.eventb.core.event name="_3Rc1kvm2EeiDfsaie0O57A" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="SuperviseTrafficLevelinDegradedMode1">
<org.eventb.core.refinesEvent name="_3Rc1k_m2EeiDfsaie0O57A" org.eventb.core.target="SuperviseTrafficLevel"/>
<org.eventb.core.guard name="_0_gqwAMPEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="grd0" org.eventb.core.predicate="operating_mode = DEGRADED_MODE_I"/>
</org.eventb.core.event>
<org.eventb.core.event name="_3Rc1lfm2EeiDfsaie0O57A" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="SuperviseTrafficLevelinDegradedMode2">
<org.eventb.core.refinesEvent name="_3RdcoPm2EeiDfsaie0O57A" org.eventb.core.target="SuperviseTrafficLevel"/>
<org.eventb.core.guard name="_0_gqwQMPEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="grd0" org.eventb.core.predicate="operating_mode = DEGRADED_MODE_II"/>
</org.eventb.core.event>
<org.eventb.core.invariant name="_kINfUPpwEeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="p3_6" org.eventb.core.predicate="∀xx·(xx ∈ dom(Sensor_Observed_Traffic_Level)&#10;  ∧ Sensor_Observed_Traffic_Level(xx)  = NORMAL&#10;  ⇒ (((card(Sensor_Observed_Vehicle[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;  ∧ (∀yy·(yy ∈ Sensor_Observed_Vehicle[{xx}] ⇒ Sensor_Observed_Vehicle_Speed(xx ↦ yy)  ≥ 11))))"/>
<org.eventb.core.invariant name="_4Lj0sPp3EeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="p3_7" org.eventb.core.predicate="∀xx·(xx ∈ dom(Sensor_Observed_Traffic_Level)&#10;  ∧ Sensor_Observed_Traffic_Level(xx)  = DENSE&#10;  ⇒ (((card(Sensor_Observed_Vehicle[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &lt; 40&#10;  ∧ (∀yy·(yy ∈ Sensor_Observed_Vehicle[{xx}] ⇒ Sensor_Observed_Vehicle_Speed(xx ↦ yy)  ∈ 9‥10))))"/>
<org.eventb.core.variable name="_7X3B0ALsEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.identifier="trafficReadedCGMU"/>
<org.eventb.core.variable name="_7X3B0QLsEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.identifier="trafficReadedCIGC"/>
<org.eventb.core.invariant name="_7X3B0gLsEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="p3_8" org.eventb.core.predicate="∀xx·(xx ∈ dom(Sensor_Observed_Traffic_Level)&#10;  ∧ Sensor_Observed_Traffic_Level(xx)  = SLOWED&#10;  ⇒ (((card(Sensor_Observed_Vehicle[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;  ∧ (∀yy·(yy ∈ Sensor_Observed_Vehicle[{xx}] ⇒ Sensor_Observed_Vehicle_Speed(xx ↦ yy)  ∈ 7‥8))))"/>
<org.eventb.core.invariant name="_7X3o4ALsEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="p3_9" org.eventb.core.predicate="∀xx·(xx ∈ dom(Sensor_Observed_Traffic_Level)&#10;  ∧ Sensor_Observed_Traffic_Level(xx)  = CONGESTION&#10;  ⇒ (((card(Sensor_Observed_Vehicle[{xx}])  ∗ 100)  ÷ MAXIMAL_TUNNEL_OCCUPATION)  &gt; 40&#10;  ∧ (∀yy·(yy ∈ Sensor_Observed_Vehicle[{xx}] ⇒ Sensor_Observed_Vehicle_Speed(xx ↦ yy)  &lt; 7))))"/>
<org.eventb.core.invariant name="_7X3o4QLsEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="p3_10" org.eventb.core.predicate="trafficReadedCGMU = TRUE ⇒ ((VdM_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Vehicle ∈ VdM_Sensor ↔ Vehicle"/>
<org.eventb.core.invariant name="_eNLI8ALvEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="p3_11" org.eventb.core.predicate="trafficReadedCIGC = TRUE ⇒ ((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}])◁Sensor_Observed_Vehicle ∈ MtQ_Sensor ↔ Vehicle"/>
<org.eventb.core.invariant name="_J_qmcALyEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="p3_12" org.eventb.core.predicate="∀xx,yy·((xx ∈ dom(Sensor_Observed_Traffic_Level)∩((VdM_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}]) ∧ yy ∈ Sensor_Observed_Vehicle[{xx}]∧trafficReadedCGMU = TRUE) ⇒ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)  ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅ )"/>
<org.eventb.core.invariant name="_J_qmcQLyEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="p3_13" org.eventb.core.predicate="∀xx,yy·((xx ∈ dom(Sensor_Observed_Traffic_Level)∩((MtQ_Sensor◁Is_Sensor_Detection_Available)∼[{TRUE}]) ∧ yy ∈ Sensor_Observed_Vehicle[{xx}]∧trafficReadedCIGC = TRUE) ⇒ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)  ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅ )"/>
<org.eventb.core.invariant name="_J_rNgALyEemie74np5lKrw" org.eventb.core.generated="false" org.eventb.core.label="p3_14" org.eventb.core.predicate="∀xx,yy·((xx ∈ dom(Sensor_Observed_Traffic_Level)∩(Is_Sensor_Detection_Available∼[{TRUE}]) ∧ yy ∈ Sensor_Observed_Vehicle[{xx}]∧trafficReaded = TRUE) ⇒ (Vehicle_Front_Position(yy)−Vehicle_Length(yy)) ‥Vehicle_Front_Position(yy)  ∩ Sensor_Coverage_Rear(xx) ‥Sensor_Coverage_Front(xx)  ≠  ∅ )"/>
</org.eventb.core.machineFile>
