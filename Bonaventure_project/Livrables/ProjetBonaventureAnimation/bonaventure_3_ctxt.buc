<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.contextFile org.eventb.core.configuration="org.eventb.core.fwd;org.eventb.codegen.ui.cgConfig;org.animb.valuation.valBase;de.prob.symbolic.ctxBase;de.prob.units.mchBase" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1545090162939" org.eventb.texttools.text_representation="context bonaventure_3_ctxt extends bonaventure_2_ctxt&#10;&#10;sets Sensor OPERATING_MODE Traffic_Light COLOR&#10;&#10;constants NORMAL_MODE DEGRADED_MODE_I DEGRADED_MODE_II RED GREEN ORANGE VdM_Sensor MtQ_Sensor AID&#10;Traffic_Light_William Traffic_Light_Wellington Traffic_Light_Position Traffic_Light_Coverage_Rear&#10;Traffic_Light_Color Sensor_Position Sensor_Coverage_Front Sensor_Coverage_Rear Sensor_Detection_Accuracy&#10;&#10;axioms&#10;  @axm1 partition(OPERATING_MODE, {NORMAL_MODE}, {DEGRADED_MODE_I},&#10;  {DEGRADED_MODE_II})&#10;  @axm2 partition(COLOR, {RED}, {GREEN}, {ORANGE})&#10;  /*@axm3 VdM_Sensor ⊆ Sensor*/&#10;  @axm4 partition(Sensor, VdM_Sensor, MtQ_Sensor)&#10;  @axm5 AID ∈ MtQ_Sensor&#10;  @axm6 Traffic_Light_William ∈ Traffic_Light&#10;  @axm7 Traffic_Light_Wellington ∈ Traffic_Light&#10;  @axm8 Traffic_Light_Position ∈ Traffic_Light → Tunnel&#10;  @axm9 Traffic_Light_Coverage_Rear ∈ Traffic_Light → Tunnel&#10;  @axm10 Traffic_Light_Color = Traffic_Light × COLOR&#10;  @axm11 Sensor_Position ∈ Sensor → Tunnel&#10;  @axm12 AID ↦ cc ∈ Sensor_Position&#10;  @axm13 Sensor_Coverage_Front ∈ Sensor → Tunnel&#10;  @axm14 AID ↦ cc ∈ Sensor_Coverage_Front&#10;  @axm15 Sensor_Coverage_Rear ∈ Sensor → Tunnel&#10;  @axm16 AID ↦ aa ∈ Sensor_Coverage_Rear&#10;  @axm17 Sensor_Detection_Accuracy ∈ Sensor → ℕ&#10;  @axm18 AID ↦ 1 ∈ Sensor_Detection_Accuracy&#10;  @axm19 VdM_Sensor ≠  ∅&#10;  @axm20 finite(Sensor)&#10;  @p3_1 ∀xx·(xx ∈ VdM_Sensor ⇒ Sensor_Detection_Accuracy(xx)  ≥ Sensor_Detection_Accuracy(AID) )&#10;end&#10;" version="3">
<org.eventb.core.extendsContext name="'" org.eventb.core.target="bonaventure_2_ctxt"/>
<org.eventb.core.carrierSet name="(" org.eventb.core.generated="false" org.eventb.core.identifier="Sensor"/>
<org.eventb.core.carrierSet name=")" org.eventb.core.generated="false" org.eventb.core.identifier="OPERATING_MODE"/>
<org.eventb.core.carrierSet name="*" org.eventb.core.generated="false" org.eventb.core.identifier="Traffic_Light"/>
<org.eventb.core.carrierSet name="+" org.eventb.core.generated="false" org.eventb.core.identifier="COLOR"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="," org.eventb.core.generated="false" org.eventb.core.identifier="NORMAL_MODE"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="-" org.eventb.core.generated="false" org.eventb.core.identifier="DEGRADED_MODE_I"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="." org.eventb.core.generated="false" org.eventb.core.identifier="DEGRADED_MODE_II"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="/" org.eventb.core.generated="false" org.eventb.core.identifier="RED"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="0" org.eventb.core.generated="false" org.eventb.core.identifier="GREEN"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="1" org.eventb.core.generated="false" org.eventb.core.identifier="ORANGE"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="2" org.eventb.core.generated="false" org.eventb.core.identifier="VdM_Sensor"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="3" org.eventb.core.generated="false" org.eventb.core.identifier="MtQ_Sensor"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="4" org.eventb.core.generated="false" org.eventb.core.identifier="AID"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="5" org.eventb.core.generated="false" org.eventb.core.identifier="Traffic_Light_William"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="6" org.eventb.core.generated="false" org.eventb.core.identifier="Traffic_Light_Wellington"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="7" org.eventb.core.generated="false" org.eventb.core.identifier="Traffic_Light_Position"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="8" org.eventb.core.generated="false" org.eventb.core.identifier="Traffic_Light_Coverage_Rear"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="9" org.eventb.core.generated="false" org.eventb.core.identifier="Traffic_Light_Color"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name=":" org.eventb.core.generated="false" org.eventb.core.identifier="Sensor_Position"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name=";" org.eventb.core.generated="false" org.eventb.core.identifier="Sensor_Coverage_Front"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="=" org.eventb.core.generated="false" org.eventb.core.identifier="Sensor_Coverage_Rear"/>
<org.eventb.core.constant de.prob.symbolic.symbolicAttribute="false" de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="&gt;" org.eventb.core.generated="false" org.eventb.core.identifier="Sensor_Detection_Accuracy"/>
<org.eventb.core.axiom name="?" org.eventb.core.generated="false" org.eventb.core.label="axm1" org.eventb.core.predicate="partition(OPERATING_MODE, {NORMAL_MODE}, {DEGRADED_MODE_I},&#10;  {DEGRADED_MODE_II})"/>
<org.eventb.core.axiom name="@" org.eventb.core.comment="@axm3 VdM_Sensor ⊆ Sensor" org.eventb.core.generated="false" org.eventb.core.label="axm2" org.eventb.core.predicate="partition(COLOR, {RED}, {GREEN}, {ORANGE})"/>
<org.eventb.core.axiom name="A" org.eventb.core.generated="false" org.eventb.core.label="axm4" org.eventb.core.predicate="partition(Sensor, VdM_Sensor, MtQ_Sensor)"/>
<org.eventb.core.axiom name="B" org.eventb.core.generated="false" org.eventb.core.label="axm5" org.eventb.core.predicate="AID ∈ MtQ_Sensor"/>
<org.eventb.core.axiom name="C" org.eventb.core.generated="false" org.eventb.core.label="axm6" org.eventb.core.predicate="Traffic_Light_William ∈ Traffic_Light"/>
<org.eventb.core.axiom name="D" org.eventb.core.generated="false" org.eventb.core.label="axm7" org.eventb.core.predicate="Traffic_Light_Wellington ∈ Traffic_Light"/>
<org.eventb.core.axiom name="E" org.eventb.core.generated="false" org.eventb.core.label="axm8" org.eventb.core.predicate="Traffic_Light_Position ∈ Traffic_Light → Tunnel"/>
<org.eventb.core.axiom name="F" org.eventb.core.generated="false" org.eventb.core.label="axm9" org.eventb.core.predicate="Traffic_Light_Coverage_Rear ∈ Traffic_Light → Tunnel"/>
<org.eventb.core.axiom name="G" org.eventb.core.generated="false" org.eventb.core.label="axm10" org.eventb.core.predicate="Traffic_Light_Color = Traffic_Light × COLOR"/>
<org.eventb.core.axiom name="H" org.eventb.core.generated="false" org.eventb.core.label="axm11" org.eventb.core.predicate="Sensor_Position ∈ Sensor → Tunnel"/>
<org.eventb.core.axiom name="M" org.eventb.core.generated="false" org.eventb.core.label="axm12" org.eventb.core.predicate="AID ↦ cc ∈ Sensor_Position"/>
<org.eventb.core.axiom name="N" org.eventb.core.generated="false" org.eventb.core.label="axm13" org.eventb.core.predicate="Sensor_Coverage_Front ∈ Sensor → Tunnel"/>
<org.eventb.core.axiom name="O" org.eventb.core.generated="false" org.eventb.core.label="axm14" org.eventb.core.predicate="AID ↦ cc ∈ Sensor_Coverage_Front"/>
<org.eventb.core.axiom name="P" org.eventb.core.generated="false" org.eventb.core.label="axm15" org.eventb.core.predicate="Sensor_Coverage_Rear ∈ Sensor → Tunnel"/>
<org.eventb.core.axiom name="Q" org.eventb.core.generated="false" org.eventb.core.label="axm16" org.eventb.core.predicate="AID ↦ aa ∈ Sensor_Coverage_Rear"/>
<org.eventb.core.axiom name="R" org.eventb.core.generated="false" org.eventb.core.label="axm17" org.eventb.core.predicate="Sensor_Detection_Accuracy ∈ Sensor → ℕ"/>
<org.eventb.core.axiom name="S" org.eventb.core.generated="false" org.eventb.core.label="axm18" org.eventb.core.predicate="AID ↦ 1 ∈ Sensor_Detection_Accuracy"/>
<org.eventb.core.axiom name="T" org.eventb.core.generated="false" org.eventb.core.label="axm19" org.eventb.core.predicate="VdM_Sensor ≠  ∅"/>
<org.eventb.core.axiom name="U" org.eventb.core.generated="false" org.eventb.core.label="axm20" org.eventb.core.predicate="finite(Sensor)"/>
<org.eventb.core.axiom name="_MvhV4PpVEeiDfsaie0O57A" org.eventb.core.generated="false" org.eventb.core.label="p3_1" org.eventb.core.predicate="∀xx·(xx ∈ VdM_Sensor ⇒ Sensor_Detection_Accuracy(xx)  ≥ Sensor_Detection_Accuracy(AID) )"/>
</org.eventb.core.contextFile>
