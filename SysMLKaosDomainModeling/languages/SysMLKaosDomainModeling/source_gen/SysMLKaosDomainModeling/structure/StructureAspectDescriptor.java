package SysMLKaosDomainModeling.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAtom = createDescriptorForAtom();
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptAttributeMaplet = createDescriptorForAttributeMaplet();
  /*package*/ final ConceptDescriptor myConceptBody = createDescriptorForBody();
  /*package*/ final ConceptDescriptor myConceptCardinality = createDescriptorForCardinality();
  /*package*/ final ConceptDescriptor myConceptConcept = createDescriptorForConcept();
  /*package*/ final ConceptDescriptor myConceptCustomDataSet = createDescriptorForCustomDataSet();
  /*package*/ final ConceptDescriptor myConceptDataSet = createDescriptorForDataSet();
  /*package*/ final ConceptDescriptor myConceptDataValue = createDescriptorForDataValue();
  /*package*/ final ConceptDescriptor myConceptDefaultDataSet = createDescriptorForDefaultDataSet();
  /*package*/ final ConceptDescriptor myConceptDomainCardinality = createDescriptorForDomainCardinality();
  /*package*/ final ConceptDescriptor myConceptDomainModel = createDescriptorForDomainModel();
  /*package*/ final ConceptDescriptor myConceptEnumeratedDataSet = createDescriptorForEnumeratedDataSet();
  /*package*/ final ConceptDescriptor myConceptHead = createDescriptorForHead();
  /*package*/ final ConceptDescriptor myConceptIndividual = createDescriptorForIndividual();
  /*package*/ final ConceptDescriptor myConceptPredicate = createDescriptorForPredicate();
  /*package*/ final ConceptDescriptor myConceptRangeCardinality = createDescriptorForRangeCardinality();
  /*package*/ final ConceptDescriptor myConceptRelation = createDescriptorForRelation();
  /*package*/ final ConceptDescriptor myConceptRelationMaplet = createDescriptorForRelationMaplet();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAtom, myConceptAttribute, myConceptAttributeMaplet, myConceptBody, myConceptCardinality, myConceptConcept, myConceptCustomDataSet, myConceptDataSet, myConceptDataValue, myConceptDefaultDataSet, myConceptDomainCardinality, myConceptDomainModel, myConceptEnumeratedDataSet, myConceptHead, myConceptIndividual, myConceptPredicate, myConceptRangeCardinality, myConceptRelation, myConceptRelationMaplet);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.Atom:
        return myConceptAtom;
      case LanguageConceptSwitch.Attribute:
        return myConceptAttribute;
      case LanguageConceptSwitch.AttributeMaplet:
        return myConceptAttributeMaplet;
      case LanguageConceptSwitch.Body:
        return myConceptBody;
      case LanguageConceptSwitch.Cardinality:
        return myConceptCardinality;
      case LanguageConceptSwitch.Concept:
        return myConceptConcept;
      case LanguageConceptSwitch.CustomDataSet:
        return myConceptCustomDataSet;
      case LanguageConceptSwitch.DataSet:
        return myConceptDataSet;
      case LanguageConceptSwitch.DataValue:
        return myConceptDataValue;
      case LanguageConceptSwitch.DefaultDataSet:
        return myConceptDefaultDataSet;
      case LanguageConceptSwitch.DomainCardinality:
        return myConceptDomainCardinality;
      case LanguageConceptSwitch.DomainModel:
        return myConceptDomainModel;
      case LanguageConceptSwitch.EnumeratedDataSet:
        return myConceptEnumeratedDataSet;
      case LanguageConceptSwitch.Head:
        return myConceptHead;
      case LanguageConceptSwitch.Individual:
        return myConceptIndividual;
      case LanguageConceptSwitch.Predicate:
        return myConceptPredicate;
      case LanguageConceptSwitch.RangeCardinality:
        return myConceptRangeCardinality;
      case LanguageConceptSwitch.Relation:
        return myConceptRelation;
      case LanguageConceptSwitch.RelationMaplet:
        return myConceptRelationMaplet;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForAtom() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "Atom", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949816dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132845");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "Attribute", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949819aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132890");
    b.prop("isVariable", 0x506f5814694981b9L, "5795948090138132921");
    b.prop("isFunctional", 0x506f5814694981eeL, "5795948090138132974");
    b.associate("domain", 0x506f5814694981f3L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497f85L).optional(false).origin("5795948090138132979").done();
    b.associate("range", 0x506f5814694981f6L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497faaL).optional(false).origin("5795948090138132982").done();
    b.aggregate("maplets", 0x506f581469498245L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694981fbL).optional(true).ordered(true).multiple(true).origin("5795948090138133061").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeMaplet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "AttributeMaplet", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694981fbL);
    b.class_(false, false, false);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132987");
    b.associate("antecedent", 0x506f581469498217L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949821aL).optional(false).origin("5795948090138133015").done();
    b.associate("image", 0x506f581469498240L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694980ebL).optional(false).origin("5795948090138133056").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBody() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "Body", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498151L);
    b.class_(false, false, false);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132817");
    b.aggregate("atoms", 0x506f58146949818cL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949816dL).optional(false).ordered(true).multiple(true).origin("5795948090138132876").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCardinality() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "Cardinality", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694982a3L);
    b.class_(false, true, false);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138133155");
    b.prop("minCardinality", 0x506f5814694982bfL, "5795948090138133183");
    b.prop("domainCardinality", 0x506f5814694982c2L, "5795948090138133186");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "Concept", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497f85L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132357");
    b.prop("isVariable", 0x506f581469497fa4L, "5795948090138132388");
    b.associate("parentConcept", 0x506f581469497fa7L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497f85L).optional(true).origin("5795948090138132391").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCustomDataSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "CustomDataSet", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498071L);
    b.class_(false, false, false);
    b.super_("SysMLKaosDomainModeling.structure.DataSet", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497faaL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132593");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "DataSet", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497faaL);
    b.class_(false, true, false);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132394");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "DataValue", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694980ebL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132715");
    b.prop("lexicalForm", 0x506f58146949810aL, "5795948090138132746");
    b.associate("type", 0x506f58146949810dL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497faaL).optional(false).origin("5795948090138132749").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultDataSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "DefaultDataSet", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497fc9L);
    b.class_(false, false, true);
    b.super_("SysMLKaosDomainModeling.structure.DataSet", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497faaL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132425");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDomainCardinality() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "DomainCardinality", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694982c7L);
    b.class_(false, false, false);
    b.super_("SysMLKaosDomainModeling.structure.Cardinality", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694982a3L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138133191");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDomainModel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "DomainModel", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497d02L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138131714");
    b.associate("parentDomainModel", 0x506f581469497f82L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497d02L).optional(true).origin("5795948090138132354").done();
    b.aggregate("concepts", 0x506f5814694983a2L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497f85L).optional(true).ordered(true).multiple(true).origin("5795948090138133410").done();
    b.aggregate("relations", 0x506f5814694983a7L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949824cL).optional(true).ordered(true).multiple(true).origin("5795948090138133415").done();
    b.aggregate("individuals", 0x506f5814694983aeL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949821aL).optional(true).ordered(true).multiple(true).origin("5795948090138133422").done();
    b.aggregate("attributes", 0x506f5814694983b7L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949819aL).optional(true).ordered(true).multiple(true).origin("5795948090138133431").done();
    b.aggregate("dataSets", 0x506f5814694983c2L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497faaL).optional(true).ordered(true).multiple(true).origin("5795948090138133442").done();
    b.aggregate("dataValues", 0x506f5814694983cfL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694980ebL).optional(true).ordered(true).multiple(true).origin("5795948090138133455").done();
    b.aggregate("predicates", 0x506f5814694983deL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498113L).optional(true).ordered(true).multiple(true).origin("5795948090138133470").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumeratedDataSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "EnumeratedDataSet", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694980ccL);
    b.class_(false, false, false);
    b.super_("SysMLKaosDomainModeling.structure.CustomDataSet", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498071L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132684");
    b.aggregate("elements", 0x506f581469498110L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694980ebL).optional(false).ordered(true).multiple(true).origin("5795948090138132752").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHead() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "Head", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498132L);
    b.class_(false, false, false);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132786");
    b.aggregate("atoms", 0x506f58146949818fL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949816dL).optional(false).ordered(true).multiple(true).origin("5795948090138132879").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIndividual() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "Individual", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949821aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138133018");
    b.associate("type", 0x506f58146949823dL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497f85L).optional(false).origin("5795948090138133053").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredicate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "Predicate", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498113L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138132755");
    b.aggregate("antecedent", 0x506f581469498192L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498151L).optional(false).ordered(true).multiple(false).origin("5795948090138132882").done();
    b.aggregate("consequent", 0x506f581469498195L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498132L).optional(true).ordered(true).multiple(false).origin("5795948090138132885").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRangeCardinality() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "RangeCardinality", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694982e3L);
    b.class_(false, false, false);
    b.super_("SysMLKaosDomainModeling.structure.Cardinality", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694982a3L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138133219");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRelation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "Relation", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949824cL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138133068");
    b.prop("isVariable", 0x506f58146949826bL, "5795948090138133099");
    b.prop("isTransitive", 0x506f58146949826eL, "5795948090138133102");
    b.prop("isSymmetric", 0x506f581469498273L, "5795948090138133107");
    b.prop("isASymmetric", 0x506f58146949827aL, "5795948090138133114");
    b.prop("isReflexive", 0x506f581469498283L, "5795948090138133123");
    b.prop("isIrreflexive", 0x506f58146949828eL, "5795948090138133134");
    b.associate("domain", 0x506f58146949829bL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497f85L).optional(false).origin("5795948090138133147").done();
    b.associate("range", 0x506f58146949829eL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469497f85L).optional(false).origin("5795948090138133150").done();
    b.aggregate("domainCardinality", 0x506f581469498363L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694982c7L).optional(false).ordered(true).multiple(false).origin("5795948090138133347").done();
    b.aggregate("rangeCardinality", 0x506f58146949836aL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f5814694982e3L).optional(false).ordered(true).multiple(false).origin("5795948090138133354").done();
    b.aggregate("maplets", 0x506f581469498397L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498373L).optional(true).ordered(true).multiple(true).origin("5795948090138133399").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRelationMaplet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SysMLKaosDomainModeling", "RelationMaplet", 0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f581469498373L);
    b.class_(false, false, false);
    b.origin("r:0069f631-891a-4ca2-904e-aa2fe791c6ed(SysMLKaosDomainModeling.structure)/5795948090138133363");
    b.associate("antecedent", 0x506f58146949838fL).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949821aL).optional(false).origin("5795948090138133391").done();
    b.associate("image", 0x506f581469498392L).target(0x9715e310dbcb448eL, 0x93035bfaafdcf84dL, 0x506f58146949821aL).optional(false).origin("5795948090138133394").done();
    return b.create();
  }
}
