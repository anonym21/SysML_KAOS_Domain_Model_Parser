<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
<org.eventb.core.prProof name="INITIALISATION/inv0_1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(TRAIN×BOOL))∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv0_2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(TRAIN×ℤ))∈dom(∅ ⦂ ℙ(TRAIN×BOOL)) → WAY"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv0_3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(TRAIN×ℤ))∈dom(∅ ⦂ ℙ(TRAIN×BOOL)) ⇸ WAY"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainOnTrack/inv0_2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p5,p8,p9,p3,p12,p6,p10,p7,p2,p11,p4,p1">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="front{tr ↦ front(tr)+len}∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainOnTrack/inv0_3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p17"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="p12,p6,p13,p10,p8,p3,p14,p5,p2,p7,p11,p1,p9,p4,p15">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="bool(⊤)∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="rear{tr ↦ rear(tr)+len}∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(⊤))∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="bool(tr∈dom(rear))∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}∈BOOL ⇸ ℙ(TRAIN × ℤ)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainOnTrack/act1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainOnTrack/act2/WD" org.eventb.core.confidence="500" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="TRAIN" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="500" org.eventb.core.prDisplay="rv (500) (tr∈dom(rear))" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5,p1"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="p3"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p13">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p1,p2,p4,p3,p5,p6,p7,p8,p9">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p14">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p1,p2,p4,p3,p5,p6,p7,p8,p9">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)∧rear∈TRAIN ⇸ ℤ∧bool(tr∈dom(rear))∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}∈BOOL ⇸ ℙ(TRAIN × ℤ)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="tr∈dom(rear)∧rear∈TRAIN ⇸ ℤ∧bool(tr∈dom(rear))∈{TRUE,FALSE}∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}∈BOOL ⇸ ℙ(TRAIN × ℤ)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="bool(tr∈dom(rear))∈{TRUE,FALSE}"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}∈BOOL ⇸ ℙ(TRAIN × ℤ)"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.review"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="inv0_4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p8">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p2"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p3,p4,p5,p1,p6,p2,p8">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="p6"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈dom(rear)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ∧tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv0_4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(∅ ⦂ ℙ(TRAIN×ℤ))⇒(∅ ⦂ ℙ(TRAIN×ℤ))(tr)&lt;(∅ ⦂ ℙ(TRAIN×ℤ))(tr)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainOnTrack/inv0_4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr0)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p4">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ovr in goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="p6">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p8"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p4"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay=" rewrites in goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="p8,p1">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0.0.0.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0.0.0.1.1.0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0.0.0.1.1.0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0.0.0.1.1.0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p13">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Functional image simplification in goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p4,p1,p13">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="tr0∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear))))⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)&lt;(front{tr ↦ front(tr)+len})(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)&lt;front(tr)+len">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr0⦂TRAIN·tr0∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear))))⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)&lt;(front{tr ↦ front(tr)+len})(tr0)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr)&lt;front(tr)+len"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr0∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear))))">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear))))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)&lt;({tr} ⩤ front)(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="{TRUE ↦ (dom({tr ↦ rear(tr)+len}) ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr)&lt;front(tr)+len"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="{TRUE ↦ ({tr} ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr)&lt;front(tr)+len"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)&lt;(front{tr ↦ front(tr)+len})(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)&lt;front(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="{TRUE ↦ rear{tr0 ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr)&lt;front(tr)+len">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.funOvr:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.locEq"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.relOvrRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.funImgSimplifies:0"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainOnTrack/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p3,p6,p7,p2,p9,p4,p8,p5,p1">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p9"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="inv1_2/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="p,q,tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees p,q)" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p6,p7">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∀p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q⇒MA∈TRAIN ⇸ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="p≤q">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q⇒MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="p ‥ q⊆WAY">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(MA)⇒(∀p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q⇒MA∈TRAIN ⇸ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="tr∈dom(MA)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="p ‥ q⊆WAY∧p≤q⇒MA∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="inv1_3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="p11">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p2,p4,p5,p1,p9,p3,p6,p8,p7,p11">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p14">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p9"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p15">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p8"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ∧MA∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="tr∈dom(MA)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ∧MA∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ∧MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(MA)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="inv1_4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p12">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p2,p4,p5,p1,p10,p3,p6,p9,p7,p8,p12">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p15">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p3"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p16">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p2,p4,p5,p1,p10,p3,p6,p9,p7,p8,p12">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p17">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p9"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒tr∈dom(rear)∧rear∈TRAIN ⇸ ℤ∧tr∈dom(MA)∧MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∈dom(rear)∩dom(MA)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="tr∈dom(rear)∧rear∈TRAIN ⇸ ℤ∧tr∈dom(MA)∧MA∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="tr∈dom(rear)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(rear)∩dom(MA)⇒tr∈dom(rear)∧rear∈TRAIN ⇸ ℤ∧tr∈dom(MA)∧MA∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∈dom(MA)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="inv1_5/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr1,tr2" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr1,tr2)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p14,p15">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p3,p5,p7,p1,p11,p2,p8,p10,p9,p6,p4,p14,p15">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p18">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p10"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p19">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="p3,p5,p7,p1,p11,p2,p8,p10,p9,p6,p4,p14,p15">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="tr2∈dom(MA)">
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒tr1∈dom(MA)∧MA∈TRAIN ⇸ ℙ(ℤ)∧tr2∈dom(MA)">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒tr1∈dom(MA)∧MA∈TRAIN ⇸ ℙ(ℤ)∧tr2∈dom(MA)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒tr1∈dom(MA)∧MA∈TRAIN ⇸ ℙ(ℤ)∧tr2∈dom(MA)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="tr1∈dom(MA)">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr1∈dom(MA)∧MA∈TRAIN ⇸ ℙ(ℤ)∧tr2∈dom(MA)">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬tr1=tr2">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="{tr1,tr2}⊆dom(MA)">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="inv1_7/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="p,q,tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p5">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees p,q)" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p8,p9">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∀p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q⇒MAtemp∈TRAIN ⇸ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="p≤q">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(MAtemp)⇒(∀p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q⇒MAtemp∈TRAIN ⇸ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="p ‥ q⊆WAY">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q⇒MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="p ‥ q⊆WAY∧p≤q⇒MAtemp∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈dom(MAtemp)">
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv1_1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))∈dom(∅ ⦂ ℙ(TRAIN×BOOL)) ⇸ ℙ(WAY)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv1_2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))(tr)=p ‥ q)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv1_3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))⇒(∅ ⦂ ℙ(TRAIN×ℤ))(tr)∈(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))(tr)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv1_4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(∅ ⦂ ℙ(TRAIN×ℤ))∩dom(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))⇒(∅ ⦂ ℙ(TRAIN×ℤ))(tr)∈(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))(tr)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv1_5/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))∧tr1≠tr2⇒(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))(tr1)∩(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv1_6/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))∈dom(∅ ⦂ ℙ(TRAIN×BOOL)) ⇸ ℙ(WAY)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv1_7/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧(∅ ⦂ ℙ(TRAIN×ℙ(ℤ)))(tr)=p ‥ q)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18,p19"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p12,p6,p13,p11,p10,p3,p14,p16,p15,p7,p4,p8,p9,p5,p17,p18,p19">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p21">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p10"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="p ‥ q⊆WAY∧p≤q"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="p≤q"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="p ‥ q⊆WAY"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44" org.eventb.core.prSets="STATES,TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45,p46,p47,p48,p49,p50,p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45,p46,p47,p48,p49,p50,p51"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p75">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p36"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p75" org.eventb.core.prHyps="p38,p10,p19,p41,p14,p28,p17,p6,p35,p18,p11,p5,p15,p31,p26,p39,p42,p40,p27,p7,p29,p12,p33,p16,p23,p37,p13,p8,p36,p3,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p59,p60,p61,p62,p63,p64,p74,p76">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p77">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p77" org.eventb.core.prHyps="p31"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="p1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="stateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="union(vsss)=p1 ‥ q1"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬OCCUPIED=FREE"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬FREE=UNKNOW"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬FREE=AMBIGUOUS"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="newstateVSScomputed∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬OCCUPIED=UNKNOW"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="b − a≥20"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]"/>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="stateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(front) ∖ dom(rear)∧ttd∈TTD∧front(tr)∈ttd⇒stateTTD(ttd)=OCCUPIED"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="stateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/inv1_6/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24,p25"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p5,p18,p21,p19,p10,p7,p11,p12,p8,p6,p15,p1,p22,p4,p20,p23,p24,p25">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="p ‥ q⊆WAY∧p≤q"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="MAtemp{tr ↦ p ‥ q}∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="p≤q"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="p ‥ q∩union(ran(MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="front(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="p ‥ q⊆WAY"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/inv1_7/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="p0,tr0,ae,q0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22" org.eventb.core.prSets="TRAIN" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr0)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p26">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p17">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay=" rewrites in goal" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay=" rewrites in hyp ({tr ↦ p ‥ q})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="dom. or ran. / union dist. rewrites in hyp (dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in tr0∈(dom(MAtemp) ∖ {tr})∪{tr}" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p36"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ hyp (tr0∈dom(MAtemp) ∖ {tr}∨tr0=tr)" org.eventb.core.prHyps="p37">
<org.eventb.core.prAnte name="'" org.eventb.core.prHyps="p38">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in tr0∈dom(MAtemp) ∖ {tr}" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40,p41"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p40,p41"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ah ((({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr0)=MAtemp(tr0))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p40">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p44">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p45">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="p33"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p46">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p5,p19,p21,p20,p10,p7,p11,p12,p8,p6,p15,p1,p22,p4,p18,p23,p24,p29,p40,p42">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p47">
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p11"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p33,p46,p40,p47">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p5,p19,p21,p20,p10,p7,p11,p12,p8,p6,p15,p1,p22,p4,p18,p23,p24,p29,p33,p40,p42,p46,p47">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p33,p46,p40,p47,p48">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ae ((({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr0))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p49">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="p33,p46">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p50">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p33,p46,p52">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prRule name="r16" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with ae=(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr0)" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p52">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p54">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p48" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r17" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r18" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with ae=MAtemp(tr0)" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="p53">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55">
<org.eventb.core.prRule name="r19" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst tr0)" org.eventb.core.prHyps="p12">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p56">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="p40" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prRule name="r20" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃p,q·p ‥ q⊆WAY∧p≤q∧MAtemp(tr0)=p ‥ q)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59,p60,p61">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q0" org.eventb.core.type="ℤ"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59,p60,p61"/>
<org.eventb.core.prRule name="r21" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ goal (inst p0,q0)" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p62">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p61,p60">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p5,p19,p21,p20,p10,p7,p11,p12,p8,p6,p15,p1,p22,p4,p18,p23,p24,p29,p33,p40,p42,p46,p47,p48,p52,p53,p59,p60,p61">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e0,e1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".expr" org.eventb.core.prRef="e3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prPredRef name=".pred" org.eventb.core.prRef="p48"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p65">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="p65" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r18" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p65">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p67">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
<org.eventb.core.prRule name="r21" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ goal (inst p,q)" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p69">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p24">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p70">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p71">
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p71" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p5,p19,p21,p20,p10,p7,p11,p12,p8,p6,p15,p1,p22,p4,p18,p23,p24,p29,p65">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e4,e5"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="2.2.0.0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="2.0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="p ‥ q⊆WAY∧p≤q"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆a ‥ b∧p0≤q0∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)=p0 ‥ q0"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="tr0∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}∈TRAIN ⇸ ℙ(ℤ)∧tr0∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr0)=MAtemp(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="p0 ‥ q0⊆a ‥ b">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q0" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr0⦂TRAIN·tr0∈dom(MAtemp{tr ↦ p ‥ q})⇒(∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆WAY∧p0≤q0∧(MAtemp{tr ↦ p ‥ q})(tr0)=p0 ‥ q0)"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬tr0∈{tr}">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="p0≤q0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q0" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="p0 ‥ q0⊆a ‥ b∧p0≤q0∧MAtemp(tr0)=p0 ‥ q0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="p≤q"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆a ‥ b∧p0≤q0∧((dom({tr ↦ p ‥ q}) ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr0)=p0 ‥ q0">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="tr0∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}∈TRAIN ⇸ ℙ(ℤ)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆a ‥ b∧p0≤q0∧MAtemp(tr0)=p0 ‥ q0">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="tr0∈dom(MAtemp) ∖ {tr}∨tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆a ‥ b∧p0≤q0∧p ‥ q=p0 ‥ q0"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="p ‥ q∩union(ran(MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="MAtemp(tr0)=p0 ‥ q0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="front(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="tr0∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="tr0∈dom(MAtemp) ∖ {tr}∨tr0∈{tr}">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr0)=p ‥ q">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆a ‥ b∧p0≤q0∧ae=p0 ‥ q0">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="p ‥ q⊆WAY"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="tr0∈dom(MAtemp)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="ae=MAtemp(tr0)">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="tr0∈dom({tr} ⩤ MAtemp)∪dom({tr ↦ p ‥ q})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="tr0∈dom(MAtemp) ∖ {tr}∨⊤">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆a ‥ b∧p0≤q0∧(MAtemp{tr ↦ p ‥ q})(tr0)=p0 ‥ q0">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="tr0∈(dom(MAtemp) ∖ {tr})∪{tr}">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="tr0∈dom(MAtemp) ∖ {tr}">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="p ‥ q⊆a ‥ b∧p≤q∧p ‥ q=p ‥ q"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="tr0∈dom(MAtemp{tr ↦ p ‥ q})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="tr0∈dom((dom({tr ↦ p ‥ q}) ⩤ MAtemp)∪{tr ↦ p ‥ q})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="tr0∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="p ‥ q⊆a ‥ b"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆WAY∧p0≤q0∧(MAtemp{tr ↦ p ‥ q})(tr0)=p0 ‥ q0">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="p0 ‥ q0⊆WAY">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q0" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="tr0∈dom(MAtemp{tr ↦ p ‥ q})⇒(∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆WAY∧p0≤q0∧(MAtemp{tr ↦ p ‥ q})(tr0)=p0 ‥ q0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="⊤⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr0)=p ‥ q)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="p ‥ q⊆a ‥ b∧⊤∧p ‥ q=p ‥ q"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="ae=(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr0)">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="tr0∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}∈TRAIN ⇸ ℙ(ℤ)∧⊤∧MAtemp∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="p0 ‥ q0⊆a ‥ b∧⊤∧⊤">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q0" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∃p0⦂ℤ,q0⦂ℤ·p0 ‥ q0⊆a ‥ b∧p0≤q0∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr0)=p0 ‥ q0">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="⊤∨tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="tr0∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr0)=p ‥ q)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e1" org.eventb.core.expression="q0">
<org.eventb.core.prIdent name="q0" org.eventb.core.type="ℤ"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e4" org.eventb.core.expression="p"/>
<org.eventb.core.prExpr name="e5" org.eventb.core.expression="q"/>
<org.eventb.core.prExpr name="e3" org.eventb.core.expression="(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e2" org.eventb.core.expression="tr0">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prExpr>
<org.eventb.core.prReas name="r12" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r15" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r19" org.eventb.core.prRID="org.eventb.core.seqprover.allD"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.domRanUnionDistRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.locEq"/>
<org.eventb.core.prReas name="r16" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.disjE"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r13" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r17" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.cut"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.relOvrRewrites"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.rmL1"/>
<org.eventb.core.prReas name="r18" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r21" org.eventb.core.prRID="org.eventb.core.seqprover.exI"/>
<org.eventb.core.prReas name="r14" org.eventb.core.prRID="org.eventb.core.seqprover.ae"/>
<org.eventb.core.prReas name="r20" org.eventb.core.prRID="org.eventb.core.seqprover.exF"/>
<org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssignMAtoTrain/grd2/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p11,p4,p12,p10,p9,p2,p13,p15,p14,p5,p3,p7,p8,p6,p16">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p18">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p9"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p19">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="p11,p4,p12,p10,p9,p2,p13,p15,p14,p5,p3,p7,p8,p6,p16">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p20">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p7"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ∧tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssignMAtoTrain/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2,p3">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p8">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧⊤∧⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssignMAtoTrain/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p2,p1" org.eventb.core.prInfHyps="p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧⊤∧⊤">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssignMAtoTrain/inv1_1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p12,p18" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p17,p6,p19,p15,p11,p3,p20,p23,p21,p7,p5,p9,p10,p8,p22,p16,p1,p12,p18,p14,p13,p25,p26">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="MAtemp(tr)∩union(ran(MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="front(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="MA{tr ↦ MAtemp(tr)}∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧⊤∧⊤"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssignMAtoTrain/inv1_2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23" org.eventb.core.prSets="TRAIN" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p12,p18" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr0)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p28">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p10"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay=" rewrites in goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay=" rewrites in hyp ({tr ↦ MAtemp(tr)})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="dom. or ran. / union dist. rewrites in hyp (dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in tr0∈(dom(MA) ∖ {tr})∪{tr}" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p36"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ hyp (tr0∈dom(MA) ∖ {tr}∨tr0=tr)" org.eventb.core.prHyps="p37">
<org.eventb.core.prAnte name="'" org.eventb.core.prHyps="p38">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p17,p6,p19,p15,p11,p3,p20,p23,p21,p7,p5,p9,p10,p8,p22,p16,p1,p12,p18,p14,p13,p25,p26,p38">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p40">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="p40" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p41"/>
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p40">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p42">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p17,p6,p19,p15,p11,p3,p20,p23,p21,p7,p5,p9,p10,p8,p22,p16,p1,p12,p18,p14,p13,p25,p26,p40">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="2.2.0.0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="tr0∈dom(MA) ∖ {tr}∨tr0∈{tr}">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="tr0∈dom(MA) ∖ {tr}">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="MAtemp(tr)∩union(ran(MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="tr0∈dom(MA) ∖ {tr}∨⊤">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧((dom({tr ↦ MAtemp(tr)}) ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr0)=p ‥ q">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="front(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="tr0∈dom(MA{tr ↦ MAtemp(tr)})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="tr0∈dom(MA{tr ↦ MAtemp(tr)})⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧(MA{tr ↦ MAtemp(tr)})(tr0)=p ‥ q)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="tr0∈dom(MA) ∖ {tr}∨tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr0)=p ‥ q">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="tr0∈dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr0⦂TRAIN·tr0∈dom(MA{tr ↦ MAtemp(tr)})⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧(MA{tr ↦ MAtemp(tr)})(tr0)=p ‥ q)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="tr0∈(dom(MA) ∖ {tr})∪{tr}">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="tr0∈dom((dom({tr ↦ MAtemp(tr)}) ⩤ MA)∪{tr ↦ MAtemp(tr)})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)=p ‥ q"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧⊤∧⊤"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="tr0∈dom({tr} ⩤ MA)∪dom({tr ↦ MAtemp(tr)})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧(MA{tr ↦ MAtemp(tr)})(tr0)=p ‥ q">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="⊤∨tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.domRanUnionDistRewrites"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.relOvrRewrites"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.disjE"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.rmL1"/>
<org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssignMAtoTrain/inv1_3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p13,p18" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr0)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p28">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ovr in goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p30">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p30">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p28" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p28"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="p19"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="p33">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Functional image simplification in goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p35">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="p17,p6,p20,p15,p12,p3,p21,p23,p22,p7,p5,p9,p10,p8,p19,p16,p1,p13,p18,p14,p11,p25,p26,p28,p33">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="tr0∈dom(MA{tr ↦ MAtemp(tr)})⇒front(tr0)∈(MA{tr ↦ MAtemp(tr)})(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr0⦂TRAIN·tr0∈dom(MA{tr ↦ MAtemp(tr)})⇒front(tr0)∈(MA{tr ↦ MAtemp(tr)})(tr0)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="front(tr0)∈({tr} ⩤ MA)(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="MAtemp(tr)∩union(ran(MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="front(tr0)∈MAtemp(tr)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="front(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="tr0∈dom(MA{tr ↦ MAtemp(tr)})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="tr∈dom(MA{tr ↦ MAtemp(tr)})"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="front(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧⊤∧⊤"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="front(tr0)∈(MA{tr ↦ MAtemp(tr)})(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.funOvr:1"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgSimplifies:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssignMAtoTrain/inv1_4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p13,p18" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr0)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p28">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ovr in goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p30">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p30">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p28" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p36"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="p17,p6,p19,p15,p12,p3,p21,p23,p22,p7,p5,p9,p10,p8,p20,p16,p1,p13,p18,p11,p25,p28,p30,p32,p35">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p37">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Functional image simplification in goal" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p39">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="p17,p6,p19,p15,p12,p3,p21,p23,p22,p7,p5,p9,p10,p8,p20,p16,p1,p13,p18,p14,p11,p25,p26,p28,p37">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="rear(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="tr∈dom(rear)⇒⊥"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="tr0∈dom(rear)∩dom(MA{tr ↦ MAtemp(tr)})⇒rear(tr0)∈(MA{tr ↦ MAtemp(tr)})(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="tr0∈dom(rear)∩dom(MA{tr ↦ MAtemp(tr)})">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="MAtemp(tr)∩union(ran(MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="rear(tr0)∈(MA{tr ↦ MAtemp(tr)})(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="⊥⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="front(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="tr∈dom(rear)∩dom(MA{tr ↦ MAtemp(tr)})"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="rear(tr0)∈({tr} ⩤ MA)(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr0⦂TRAIN·tr0∈dom(rear)∩dom(MA{tr ↦ MAtemp(tr)})⇒rear(tr0)∈(MA{tr ↦ MAtemp(tr)})(tr0)"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="rear(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧⊤∧⊤"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="rear(tr0)∈MAtemp(tr)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬tr∈dom(rear)"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.funOvr:1"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgSimplifies:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssignMAtoTrain/inv1_5/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr1,tr2" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p13,p18" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr1,tr2)" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p29,p30">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ovr in goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="p32">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ovr in goal" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="p34">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p36">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr1=tr" org.eventb.core.prHyps="p32">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p29" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p30" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="p34" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p40"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p41">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Functional image simplification in goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr1=tr" org.eventb.core.prHyps="p32">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p29" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p30" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="p41" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p44"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p7,p19,p14,p11,p25,p32,p41,p37">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="p45">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ovr in goal" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p34">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Functional image simplification in goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr2=tr" org.eventb.core.prHyps="p34">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p29" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p29"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p7,p19,p14,p11,p25,p30,p45,p34,p49">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p41">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Functional image simplification in goal" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Functional image simplification in goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p17,p6,p20,p15,p12,p3,p21,p23,p22,p8,p5,p9,p10,p7,p19,p16,p1,p13,p18,p14,p11,p25,p26,p29,p30,p45,p41">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="MA(tr1)∩({tr} ⩤ MA)(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="{tr1,tr2}⊆dom(MA{tr ↦ MAtemp(tr)})∧¬tr1=tr2⇒(MA{tr ↦ MAtemp(tr)})(tr1)∩(MA{tr ↦ MAtemp(tr)})(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA{tr ↦ MAtemp(tr)})∧¬tr1=tr2⇒(MA{tr ↦ MAtemp(tr)})(tr1)∩(MA{tr ↦ MAtemp(tr)})(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="tr1=tr">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="front(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="{tr,tr2}⊆dom(MA{tr ↦ MAtemp(tr)})">
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="{tr1,tr2}⊆dom(MA{tr ↦ MAtemp(tr)})">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="MAtemp(tr)∩({tr} ⩤ MA)(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="({tr} ⩤ MA)(tr1)∩({tr} ⩤ MA)(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="(MA{tr ↦ MAtemp(tr)})(tr1)∩(MA{tr ↦ MAtemp(tr)})(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧⊤∧⊤"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬tr2=tr">
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="MA(tr1)∩MAtemp(tr)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬⊤"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="tr2=tr">
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="MAtemp(tr)∩union(ran(MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬⊥"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="MAtemp(tr)∩(MA{tr ↦ MAtemp(tr)})(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="({tr} ⩤ MA)(tr1)∩(MA{tr ↦ MAtemp(tr)})(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬tr1=tr2">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="{tr1,tr}⊆dom(MA{tr ↦ MAtemp(tr)})">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="MAtemp(tr)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬tr=tr2">
<org.eventb.core.prIdent name="tr2" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="MAtemp(tr)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="⊥"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA{tr ↦ MAtemp(tr)})∧tr1≠tr2⇒(MA{tr ↦ MAtemp(tr)})(tr1)∩(MA{tr ↦ MAtemp(tr)})(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="({tr} ⩤ MA)(tr1)∩MAtemp(tr)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="MAtemp(tr)∩MAtemp(tr)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬tr1=tr">
<org.eventb.core.prIdent name="tr1" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.funOvr:1"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgSimplifies:0"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="AssignMAtoTrain/act1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p2,p1" org.eventb.core.prInfHyps="p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧⊤∧⊤">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ∧tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainFollowingItsMA/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p12,p6,p13,p11,p10,p4,p14,p16,p15,p7,p5,p8,p9,p3,p2,p17">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p19">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="p10"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p20">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p12,p6,p13,p11,p10,p4,p14,p16,p15,p7,p5,p8,p9,p3,p2,p17">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p21">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p16"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MA)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ∧tr∈dom(MA)∧MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="tr∈dom(MA)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainFollowingItsMA/inv1_3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="tr0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr0)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p24">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ovr in goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p26">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p26">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p24"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p21"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p6"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p28">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Functional image simplification in goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p7,p18,p20,p19,p10,p8,p11,p12,p5,p3,p6,p15,p1,p21,p4,p22,p24,p28">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="({tr} ⩤ front)(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MA)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="front(tr)+len∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr0⦂TRAIN·tr0∈dom(MA)⇒(front{tr ↦ front(tr)+len})(tr0)∈MA(tr0)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="(front{tr ↦ front(tr)+len})(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="tr0∈dom(MA)⇒(front{tr ↦ front(tr)+len})(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="tr∈dom(MA)"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="front(tr)+len∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="front(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="tr0∈dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.funOvr:1"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.funImgSimplifies:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainFollowingItsMA/inv1_4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="p,q,tr0,ae" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21" org.eventb.core.prSets="TRAIN" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees tr0)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay=" rewrites in goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay=" rewrites in hyp ({tr ↦ rear(tr)+len})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p28"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst tr0)" org.eventb.core.prHyps="p8">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p31">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p8"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ah (tr∈dom(rear)∨tr∉dom(rear))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p32">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p32" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p32">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p32" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p32">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ hyp (tr∈dom(rear)∨tr∉dom(rear))" org.eventb.core.prHyps="p32">
<org.eventb.core.prAnte name="'" org.eventb.core.prHyps="p35">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p32"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p35">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p38">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="dom. or ran. / union dist. rewrites in hyp (dom(({tr} ⩤ rear)∪{tr ↦ rear(tr)+len}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ah ((dom(rear) ∖ {tr})∪{tr}=dom(rear))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p43">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p7,p18,p20,p19,p10,p8,p11,p12,p5,p3,p6,p15,p1,p21,p4,p25,p31,p35,p42">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p43">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ae ((dom(rear) ∖ {tr})∪{tr})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p44">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with ae=(dom(rear) ∖ {tr})∪{tr}" org.eventb.core.prHyps="p44">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p42" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p43" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p42,p43"/>
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p44"/>
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with ae=dom(rear)" org.eventb.core.prHyps="p46">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p45" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p45"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="p34" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ah (tr0=tr∨tr0≠tr)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p49">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p49">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ hyp (tr0=tr∨tr0≠tr)" org.eventb.core.prHyps="p49">
<org.eventb.core.prAnte name="'" org.eventb.core.prHyps="p50">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="p50" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with tr0=tr" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="p50">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p54">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p34" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p48" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p34,p48"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55">
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p19"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst tr)" org.eventb.core.prHyps="p19">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p56">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p19"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃p,q·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59,p60,p61">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prHypAction>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59,p60,p61"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ah (rear(tr)+len&lt;front(tr)+len)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p35,p1,p15">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
<org.eventb.core.prRule name="r16" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="p7"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p35,p64,p15,p1">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p7,p18,p20,p19,p10,p8,p11,p12,p5,p3,p6,p15,p1,p21,p4,p25,p35,p42,p43,p44,p45,p46,p34,p48,p50,p52,p53,p59,p60,p61,p64">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p35,p64,p15,p1,p65">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p7,p18,p20,p19,p10,p8,p11,p12,p5,p3,p6,p15,p1,p21,p4,p25,p35,p42,p43,p44,p45,p46,p34,p48,p50,p52,p53,p59,p60,p61,p64,p65">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1;2;3:30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prPredRef name=".pred" org.eventb.core.prRef="p65"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p66">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="p66" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p7,p18,p20,p19,p10,p8,p11,p12,p5,p3,p6,p15,p1,p21,p4,p25,p35,p42,p43,p44,p45,p46,p34,p48,p68">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prPredRef name=".pred" org.eventb.core.prRef="p49"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".expr" org.eventb.core.prRef="e1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prPredRef name=".pred" org.eventb.core.prRef="p43"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p69">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p32"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="p69" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p71">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p72">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="p71" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="p34" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prRule name="r17" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p74"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prPredRef name=".pred" org.eventb.core.prRef="p32"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.0.0.0.0.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0.0.0.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="(dom(rear) ∖ {tr})∪{tr}=dom(rear)"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="rear(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="{TRUE ↦ ({tr} ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(⊤))(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="tr∈dom(rear)∨tr∉dom(rear)"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="tr0∈dom({TRUE ↦ ({tr} ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(⊤)))∩dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="¬tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="ae=(dom(rear) ∖ {tr})∪{tr}">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="tr0∈(dom({tr} ⩤ rear)∪dom({tr ↦ rear(tr)+len}))∩dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀tr0⦂TRAIN·tr0∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear))))∩dom(MA)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)∈MA(tr0)"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="{TRUE ↦ ({tr} ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="p≤q">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="rear(tr)+len∈MA(tr)"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="tr0∈dom({TRUE ↦ ({tr} ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(⊥)))∩dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="⊤∨tr∉dom(rear)"/>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="tr∉dom(rear)"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="tr0∈dom(({tr} ⩤ rear)∪{tr ↦ rear(tr)+len})∩dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="tr0∈ae∩dom(MA)">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="tr0∈((dom(rear) ∖ {tr})∪{tr})∩dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="tr∈dom(MA)"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="{TRUE ↦ (dom({tr ↦ rear(tr)+len}) ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="tr0∈dom(rear)∩dom(MA)⇒rear(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="tr0∈dom({TRUE ↦ (dom({tr ↦ rear(tr)+len}) ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear))))∩dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="tr∈dom(rear)∩dom(MA)"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="tr0=tr∨⊤">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="tr0∈dom({TRUE ↦ ({tr} ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear))))∩dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="⊤⇒⊥"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="tr∈dom(rear)∨⊤"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="tr0=tr∨tr0≠tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="p ‥ q⊆WAY">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="⊤∧rear∈TRAIN ⇸ ℤ∧⊤∧⊤"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="tr0∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear))))∩dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MA)"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="front(tr)+len∈MA(tr)"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="⊤∨tr0≠tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="MA(tr)=p ‥ q">
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="(({tr} ⩤ rear)∪{tr ↦ rear(tr)+len})(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="rear(tr)+len&lt;front(tr)+len"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="tr0∈dom({TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear))))∩dom(MA)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="⊥"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="⊤⇒rear(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="ae=dom(rear)">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="tr0=tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="tr0≠tr">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="tr∈dom(rear)∧rear∈TRAIN ⇸ ℤ∧tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="⊤⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="{TRUE ↦ ({tr} ⩤ rear)∪{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(⊥))(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="tr0∈dom(rear)∩dom(MA)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="¬tr∈dom(rear)"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="(({tr} ⩤ rear)∪{tr ↦ rear(tr)+len})(tr0)∈MA(tr0)">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e2" org.eventb.core.expression="tr0">
<org.eventb.core.prIdent name="tr0" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="tr"/>
<org.eventb.core.prExpr name="e1" org.eventb.core.expression="(dom(rear) ∖ {tr})∪{tr}"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.allD"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r10" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.domRanUnionDistRewrites"/>
<org.eventb.core.prReas name="r17" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
<org.eventb.core.prReas name="r12" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.disjE"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r16" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r13" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.cut"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.relOvrRewrites"/>
<org.eventb.core.prReas name="r14" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.core.seqprover.ae"/>
<org.eventb.core.prReas name="r15" org.eventb.core.prRID="org.eventb.core.seqprover.exF"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainFollowingItsMA/grd1/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p7,p18,p20,p19,p10,p8,p11,p12,p5,p3,p6,p15,p1,p21,p4,p22">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MA)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="front(tr)+len∈MA(tr)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="tr∈dom(MA)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="MoveTrainFollowingItsMA/grd3/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p16,p9,p17,p14,p13,p7,p18,p20,p19,p10,p8,p11,p12,p5,p3,p6,p15,p1,p21,p4,p22">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="MA∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]∩dom(MA)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="front(tr)+len∈MA(tr)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="tr∈dom(MA)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv2_1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15,p16,p17,p18,p19,p20,p21"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p15,p16,p17,p18,p19,p20,p21"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p4,p12,p7,p5,p10,p3,p8,p11,p6,p2,p15,p16,p17,p18,p19,p20,p21,p22,p23">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬FREE=AMBIGUOUS"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="TTD × {OCCUPIED}∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬OCCUPIED=FREE"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬OCCUPIED=UNKNOW"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬FREE=UNKNOW"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv2_2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15,p16,p17,p18,p19,p20,p21"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p15,p16,p17,p18,p19,p20,p21"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p4,p12,p7,p5,p10,p3,p8,p11,p6,p2,p15,p16,p17,p18,p19,p20,p21,p22,p23">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬FREE=AMBIGUOUS"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="VSS × {UNKNOW}∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬OCCUPIED=FREE"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬OCCUPIED=UNKNOW"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬FREE=UNKNOW"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingTTDStates/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31" org.eventb.core.prSets="STATES,TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33,p34,p35,p36,p37,p38"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33,p34,p35,p36,p37,p38"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p42">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p27,p6,p15,p9,p20,p13,p3,p25,p14,p7,p2,p10,p23,p18,p28,p30,p29,p21,p4,p22,p8,p24,p11,p26,p5,p12,p19,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p43">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p23"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="newstateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="p1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="stateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="ttds" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="stateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="ttds⊆newstateTTD∼[{FREE}]"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬OCCUPIED=FREE"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬FREE=UNKNOW"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬FREE=AMBIGUOUS"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="union(ttds)=p1 ‥ q1"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="stateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="newstateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬OCCUPIED=UNKNOW"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingTTDStates/grd7/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4,p5,p6,p7,p8,p9"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8,p9"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p16">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingTTDStates/grd8/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingTTDStates/grd11/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∉dom(rear)⇒⊥">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="tr∈dom(rear)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingTTDStates/grd12/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingTTDStates/grd2/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="ae,ae0" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43" org.eventb.core.prSets="STATES,TRAIN" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="p1,p38" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p45"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p50">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in goal" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p17">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in rear(tr)∈p ‥ q" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ae (union(VSS))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p53" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p54">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p17"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ae (union(VSS))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p53" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p55">
<org.eventb.core.prIdent name="ae0" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with ae0=union(VSS)" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="p55">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p54" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p54,p17"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with ae0=WAY" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p57">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p50">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p56" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p35"/>
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ah (union(ttds∪ttds1)⊆WAY)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p53" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p60">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ah (ttds∪ttds1⊆TTD)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p53" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p61">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p19">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="p39,p8,p18,p11,p29,p16,p5,p36,p17,p9,p4,p25,p12,p33,p26,p40,p42,p41,p30,p6,p32,p10,p34,p13,p37,p7,p15,p27,p3,p38,p1,p19,p14,p22,p23,p35,p31,p28,p46,p47,p48,p49,p52,p54,p55,p56,p57,p59">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p61">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in goal" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="p29">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19,p64"/>
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p37,p7,p15,p27,p3,p19,p14,p22,p35,p31,p28,p49,p52,p57,p59,p64">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prPredRef name=".pred" org.eventb.core.prRef="p61"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p60">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p39,p8,p18,p11,p29,p16,p5,p36,p17,p9,p4,p25,p12,p33,p26,p40,p42,p41,p30,p6,p32,p10,p34,p13,p37,p7,p15,p27,p3,p38,p1,p19,p14,p22,p23,p35,p31,p28,p46,p47,p48,p49,p52,p54,p55,p56,p57,p59,p60">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prPredRef name=".pred" org.eventb.core.prRef="p60"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".expr" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".expr" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p66">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p39,p8,p18,p11,p29,p16,p5,p36,p17,p9,p4,p25,p12,p33,p26,p40,p42,p41,p30,p6,p32,p10,p34,p13,p37,p7,p15,p27,p3,p38,p1,p19,p14,p22,p23,p35,p31,p28,p20,p46,p47,p48,p49">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="newstateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="p1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="stateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="ttds" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="ttds1" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="p ‥ q⊆WAY∧p≤q"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="p ‥ q⊆union(VSS)"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="ae=union(VSS)">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="p≤q"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="ae=ae0">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="ae0" org.eventb.core.type="ℙ(ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="ttds⊆newstateTTD∼[{FREE}]"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="ttds⊆TTD∧ttds1⊆TTD"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="ttds1⊆TTD"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)≥p0"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="ae0=WAY">
<org.eventb.core.prIdent name="ae0" org.eventb.core.type="ℙ(ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="front(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="p ‥ q⊆ae0">
<org.eventb.core.prIdent name="ae0" org.eventb.core.type="ℙ(ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="union(ttds∪ttds1)⊆WAY"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="p ‥ q⊆union(ttds∪ttds1)"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="p ‥ q⊆WAY"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="ttds⊆TTD"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="p1≥front(tr)"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="ae=WAY">
<org.eventb.core.prIdent name="ae" org.eventb.core.type="ℙ(ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="tr∈dom(rear)⇒p≤rear(tr)∧rear(tr)≤q"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="stateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="union(ttds1)=p0 ‥ p1 − 1"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="ttds∪ttds1⊆TTD"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="union(ttds∪ttds1)⊆union(TTD)"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="union(ttds)=p1 ‥ q1"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="ae0=union(VSS)">
<org.eventb.core.prIdent name="ae0" org.eventb.core.type="ℙ(ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="stateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="newstateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="ttds⊆TTD∧⊤"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="union(VSS)"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r11" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.locEq"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
<org.eventb.core.prReas name="r12" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.cut"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.rmL1"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.ae"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingVSSStates/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31" org.eventb.core.prSets="STATES,TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p35">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="p27,p7,p15,p10,p19,p13,p4,p25,p14,p8,p3,p17,p11,p22,p18,p28,p30,p29,p20,p5,p21,p9,p23,p12,p24,p6,p26,p2,p32,p33,p34">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p36">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="p22"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="p1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="stateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="union(vsss)=p1 ‥ q1"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="stateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="stateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingVSSStates/grd7/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p8">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingVSSStates/grd8/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingVSSStates/grd11/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="tr∉dom(rear)⇒⊥">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="tr∈dom(rear)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingVSSStates/grd12/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingVSSStates/grd2/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43" org.eventb.core.prSets="STATES,TRAIN" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44,p45,p46,p47,p48,p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p44,p45,p46,p47,p48,p49,p50"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="p1,p38" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in goal" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="p18">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ah (vsss∪vsss1⊆VSS)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p60">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p39,p10,p20,p14,p31,p17,p7,p36,p18,p11,p5,p15,p33,p28,p40,p42,p41,p29,p8,p32,p12,p35,p16,p34,p9,p37,p3,p4,p38,p1,p6,p13,p23,p24,p19,p30,p27,p22,p44,p45,p46,p47,p48,p49,p50,p53,p54,p55,p56">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p60">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p34,p9,p37,p3,p4,p6,p13,p23,p19,p30,p27,p22,p44,p45,p46,p47,p48,p49,p50,p56,p60">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prPredRef name=".pred" org.eventb.core.prRef="p60"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p64">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="p39,p10,p20,p14,p31,p17,p7,p36,p18,p11,p5,p15,p33,p28,p40,p42,p41,p29,p8,p32,p12,p35,p16,p34,p9,p37,p3,p4,p38,p1,p6,p13,p23,p24,p19,p30,p27,p22,p44,p45,p46,p47,p48,p49,p50,p53,p54,p55,p56">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="p1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="stateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="vsss1" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="p ‥ q⊆WAY∧p≤q"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="vsss∪vsss1⊆VSS"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="union(vsss)=p1 ‥ q1"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="vsss⊆VSS∧vsss1⊆VSS"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="vsss⊆VSS∧⊤"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="vsss1⊆VSS"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="p ‥ q⊆union(VSS)"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="p≤q"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬OCCUPIED=FREE"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="p ‥ q⊆union(vsss∪vsss1)"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬FREE=UNKNOW"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)≥p0"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬FREE=AMBIGUOUS"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="front(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="vsss⊆VSS"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="p ‥ q⊆WAY"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬OCCUPIED=UNKNOW"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="p1≥front(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="union(vsss1)=p0 ‥ p1 − 1"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="stateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="stateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.cut"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.locEq"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingTTDStates/inv2_1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="newstateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAFollowingVSSStates/inv2_2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd1/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd2/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd3/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd4/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd5/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd6/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd7/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p15"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p16">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)≥p0"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="⊤⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="rear(tr)≥p0"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd8/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p19">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22,p23"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="front(tr)≥p0"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬⊥⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬tr∈dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬tr∈dom(rear)"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd9/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd10/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd11/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/grd12/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p15"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p16">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="⊤⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="rear(tr)∈p ‥ q"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/act1/SIM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd7/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4,p5,p6,p7,p8,p9"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8,p9"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p35"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p36"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p44"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="p55">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd8/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p38"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd11/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p40"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p48" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="tr∈dom(rear)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∉dom(rear)⇒⊥">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd12/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd0/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p13,p14" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p27"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p40"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p41"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p62" org.eventb.core.prInfHyps="p63"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬FREE=AMBIGUOUS"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="newstateVSScomputed∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd2/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p10,p11" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p20"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p9"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/act2/SIM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p10,p11" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p20"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p9"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv3_1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p4,p12,p13,p7,p5,p10,p3,p8,p11,p6,p2,p16,p17,p18,p19,p20,p21,p22,p23,p24">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:800"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="VSS × {UNKNOW}∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬OCCUPIED=FREE"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬FREE=UNKNOW"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬FREE=AMBIGUOUS"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬OCCUPIED=UNKNOW"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="b − a≥20"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeVSSStates/inv3_1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="newstateVSScomputed1" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSScomputed1∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd13/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p11,p12" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p38"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p10"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prHyps="p0">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p61" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p61"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd14/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p11,p12" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p38"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p10"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prHyps="p0">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p61" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p61"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMA/grd15/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATES,TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p0">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p13,p14" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p41"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p42"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="p49">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p68" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p68"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊥∨(tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}(bool(tr∈dom(rear)))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬MAtemp(tr)=p ‥ q"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="tr∉dom(MAtemp)∨(tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬⊤∨¬MAtemp(tr)=p ‥ q"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48" org.eventb.core.prSets="STATES,TRAIN" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1;2;3:30000"/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="p1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="stateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="union(vsss)=p1 ‥ q1"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="newstateVSScomputed∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="b − a≥20"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="stateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(front) ∖ dom(rear)∧ttd∈TTD∧front(tr)∈ttd⇒stateTTD(ttd)=OCCUPIED"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="stateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd7/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4,p5,p6,p7,p8,p9"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8,p9"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p35"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p36"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p44"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="p55">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="tr∈dom(rear)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd8/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p38"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd11/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p40"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p48" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="tr∈dom(rear)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∉dom(rear)⇒⊥">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd12/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd0/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p13,p14" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p27"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p40"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p41"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="HIDE20" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p66" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬tr∈dom(MAtemp)∨(tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ))">
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬FREE=AMBIGUOUS"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q">
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="newstateVSScomputed∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q">
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="tr∉dom(MAtemp)∨(tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ))">
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd13/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p11,p12" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p38"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p10"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prHyps="p0">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p61" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p61"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd14/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p11,p12" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p38"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p10"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prHyps="p0">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p61" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p61"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd15/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATES,TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p0">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p13,p14" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p41"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p42"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="p49">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p68" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p68"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊥∨(tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬MAtemp(tr)=p ‥ q"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="tr∉dom(MAtemp)∨(tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬⊤∨¬MAtemp(tr)=p ‥ q"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="tr∈dom(MAtemp)"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="MAtemp∈TRAIN ⇸ ℙ(ℤ)"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/MAtemp/EQL" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p11,p12" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p38"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p10"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prHyps="p0">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p60" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p60"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/stateVSS/EQL" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4,p5,p6,p7,p8,p9"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8,p9"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p12,p13" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p40"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p61" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p61"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="stateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∈dom(front)">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="newstateVSScomputed=stateVSS"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="newstateVSS=stateVSS"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TRAIN" org.eventb.core.type="ℙ(TRAIN)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd14/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRAIN">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p40"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p48" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="tr∈dom(rear)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬OCCUPIED=FREE">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬FREE=UNKNOW">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬FREE=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0">
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬OCCUPIED=UNKNOW">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)">
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q">
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="tr∉dom(rear)⇒⊥">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED">
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))">
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="STATES" org.eventb.core.type="ℙ(STATES)"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ">
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))">
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="ComputeTrainMAUsingVSSStates/grd15/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59" org.eventb.core.prSets="STATES,TRAIN" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60,p61,p62,p63,p64,p65,p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p60,p61,p62,p63,p64,p65,p66"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="p1,p26" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p87">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p82"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃vsss,vsss1,newstateVSS·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧vsss1⊆VSS∧union(vsss1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(vsss∪vsss1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p88"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∃ttds,ttds1·[[11]]∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧ttds1⊆TTD∧union(ttds1)=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union(ttds∪ttds1)∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p89"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[0]]∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧[[11]]∈connectedTrain∼[{TRUE}]∧[[2]]⊆[[0]]∼[{FREE}]∧union([[2]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[1]]⊆VSS∧union([[1]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[2]]∪[[1]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p90"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈connectedTrain∼[{TRUE}]∧[[1]]⊆stateTTD∼[{FREE}]∧union([[1]])=[[4]] ‥ [[3]]∧[[4]]≥front([[11]])∧[[0]]⊆TTD∧union([[0]])=[[5]] ‥ [[4]] − 1∧([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])∧(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])∧[[10]] ‥ [[9]]⊆union([[1]]∪[[0]])∧[[10]] ‥ [[9]]∩union(ran({[[11]]} ⩤ MA))=∅∧front([[11]])∈[[10]] ‥ [[9]]∧([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])∧[[8]]∈ℕ1∧front([[11]])+[[8]]∈WAY∧¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p91"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p92"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p93"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p94"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(¬[[11]]∈dom(rear)⇒front([[11]])≥[[5]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p95"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p96"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬([[11]]∈dom(rear)⇒rear([[11]])∈[[10]] ‥ [[9]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p97"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p98"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬[[11]]∈dom(({[[11]]} ⩤ MAtemp)∪{[[11]] ↦ [[10]] ‥ [[9]]})" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p99"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p99" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with newstateVSS=newstateVSScomputed" org.eventb.core.prHyps="p40">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p55" org.eventb.core.prInfHyps="p102"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p87" org.eventb.core.prHyps="p56,p37,p13,p28,p42,p49,p10,p6,p25,p11,p8,p4,p9,p51,p48,p57,p29,p58,p22,p35,p50,p39,p54,p43,p46,p27,p40,p36,p55,p2,p34,p26,p1,p5,p41,p17,p18,p12,p23,p21,p45,p3,p38,p60,p61,p62,p63,p64,p65,p66,p69,p70,p71,p72,p73,p74,p76,p77,p78,p79,p80,p81,p86,p100,p101,p102">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1;2;3:30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.14"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.15"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.11"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.12"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.8"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2.6"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3.7"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1.2"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1.3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="10.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="9.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="AMBIGUOUS" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="FREE" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="MA" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="MAtemp" org.eventb.core.type="ℙ(TRAIN×ℙ(ℤ))"/>
<org.eventb.core.prIdent name="OCCUPIED" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="TTD" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="UNKNOW" org.eventb.core.type="STATES"/>
<org.eventb.core.prIdent name="VSS" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="WAY" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.prIdent name="a" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="b" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="connectedTrain" org.eventb.core.type="ℙ(TRAIN×BOOL)"/>
<org.eventb.core.prIdent name="front" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="len" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="newstateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="newstateVSScomputed" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="p" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="p0" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="p1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="q1" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="rear" org.eventb.core.type="ℙ(TRAIN×ℤ)"/>
<org.eventb.core.prIdent name="stateTTD" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="stateVSS" org.eventb.core.type="ℙ(ℙ(ℤ)×STATES)"/>
<org.eventb.core.prIdent name="tr" org.eventb.core.type="TRAIN"/>
<org.eventb.core.prIdent name="vsss" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prIdent name="vsss1" org.eventb.core.type="ℙ(ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="len∈ℕ1"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="vsss1⊆VSS"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ)·ttd∈TTD⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p&lt;q∧ttd=p ‥ q)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="inter(VSS)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="union(VSS)=WAY"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="WAY=a ‥ b"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})(tr)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="VSS≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="tr∈dom(rear)⇒rear∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2⇒front(tr2)&lt;rear(tr1)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="partition(STATES,{OCCUPIED},{FREE},{UNKNOW},{AMBIGUOUS})"/>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MA)∧len∈ℕ1∧front(tr)+len∈MA(tr)⇒front(tr)+len=front(tr)+len∧(tr∈dom(rear)⇒{TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear}={TRUE ↦ rear{tr ↦ rear(tr)+len},FALSE ↦ rear})"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="tr∈dom(front)"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="newstateVSScomputed∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="b − a≥20"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="MA∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2∧ttd∈TTD∧front(tr1)∈ttd⇒front(tr2)∉ttd"/>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧¬tr1=tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀tr⦂TRAIN,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∩dom(MAtemp)∧front(tr)∈MAtemp(tr)∧(tr∈dom(rear)⇒rear(tr)∈MAtemp(tr))∧MAtemp(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MA)∪{tr ↦ MAtemp(tr)})∧len∈ℕ1∧front(tr)+len∈MAtemp(tr)"/>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="tr∈connectedTrain∼[{TRUE}]"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="tr∉dom(MAtemp)∨(tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MAtemp)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MAtemp(tr)=p ‥ q)"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="union(vsss1)=p0 ‥ p1 − 1"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="TTD⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="stateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬(tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))"/>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧tr1≠tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="rear∈dom(connectedTrain) ⇸ WAY"/>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧¬rear(tr) ‥ front(tr)∩ttd=(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="tr∉dom(rear)⇒tr∈dom(front)∧front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="vsss⊆newstateVSS∼[{FREE}]"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="{a,b}⊆ℕ"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="¬VSS=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨p1&lt;front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="TTD≠(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="front∈TRAIN ⇸ ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="union(vsss)=p1 ‥ q1"/>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀vss⦂ℙ(ℤ)·vss∈VSS⇒(∃p⦂ℤ,q⦂ℤ,ttd⦂ℙ(ℤ)·ttd∈TTD∧p ‥ q⊆ttd∧p&lt;q∧vss=p ‥ q)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="connectedTrain∈TRAIN ⇸ BOOL"/>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="¬tr∈dom(MAtemp)∨(tr∈dom(MAtemp)∧MAtemp∈TRAIN ⇸ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬OCCUPIED=FREE"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="inter(TTD)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="p ‥ q⊆union(vsss∪vsss1)"/>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="¬FREE=UNKNOW"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧tr1≠tr2⇒front(tr2)&lt;rear(tr1)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="tr∈dom(rear)⇒rear(tr)≥p0"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="¬FREE=AMBIGUOUS"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="tr∉dom(rear)⇒front(tr)≥p0"/>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·tr1∈dom(rear)∧tr2∈dom(rear)∧¬tr1=tr2⇒rear(tr1) ‥ front(tr1)∩rear(tr2) ‥ front(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="front(tr)∈p ‥ q"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒front(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(rear)∧ttd∈TTD∧rear(tr) ‥ front(tr)∩ttd≠(∅ ⦂ ℙ(ℤ))⇒stateTTD(ttd)=OCCUPIED"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="VSS⊆ℙ1(WAY)"/>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="¬tr∈dom(rear)⇒front(tr)≥p0"/>
<org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="¬OCCUPIED=UNKNOW"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN·{tr1,tr2}⊆dom(MA)∧tr1≠tr2⇒MA(tr1)∩MA(tr2)=(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="p1≥front(tr)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)∩dom(MA)⇒rear(tr)∈MA(tr)"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="a&lt;b"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="newstateVSS=newstateVSScomputed"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="tr∉dom(rear)⇒⊤∧⊤"/>
<org.eventb.core.prPred name="p102" org.eventb.core.predicate="vsss⊆newstateVSScomputed∼[{FREE}]"/>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬UNKNOW=AMBIGUOUS"/>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧p ‥ q⊆WAY∧p≤q∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY⇒tr∈connectedTrain∼[{TRUE}]∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈p ‥ q⇒tr∈connectedTrain∼[{TRUE}]∩dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∧front(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∧(tr∈dom(rear)⇒rear(tr)∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr))∧(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)"/>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀tr1⦂TRAIN,tr2⦂TRAIN,ttd⦂ℙ(ℤ)·tr1∈dom(front) ∖ dom(rear)∧tr2∈dom(front) ∖ dom(rear)∧¬tr1=tr2∧ttd∈TTD∧front(tr1)∈ttd⇒¬front(tr2)∈ttd"/>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒p ‥ q=p ‥ q"/>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒¬(∃vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀ttd⦂ℙ(ℤ),tr⦂TRAIN·tr∈dom(front) ∖ dom(rear)∧ttd∈TTD∧front(tr)∈ttd⇒stateTTD(ttd)=OCCUPIED"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬OCCUPIED=AMBIGUOUS"/>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·¬tr∈connectedTrain∼[{TRUE}]∨¬ttds⊆stateTTD∼[{FREE}]∨¬union(ttds)=p1 ‥ q1∨¬p1≥front(tr)∨¬ttds1⊆TTD∨¬union(ttds1)=p0 ‥ p1 − 1∨¬(tr∈dom(rear)⇒rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(ttds∪ttds1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="STATES={OCCUPIED,FREE,UNKNOW,AMBIGUOUS}"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="union(TTD)=WAY"/>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬(newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})))"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="MAtemp∈dom(connectedTrain) ⇸ ℙ(WAY)"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="front∈dom(connectedTrain) → WAY"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒¬(∃ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ))·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})∨(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q})(tr)≠p ‥ q))"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ,newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∧tr∈connectedTrain∼[{TRUE}]∧vsss⊆newstateVSS∼[{FREE}]∧union(vsss)=p1 ‥ q1∧p1≥front(tr)∧vsss1⊆VSS∧union(vsss1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(tr∉dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(vsss∪vsss1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(tr∉dom(MAtemp)∨MAtemp(tr)≠p ‥ q)⇒tr∈connectedTrain∼[{TRUE}]∧(p ‥ q⊆WAY∧p≤q)∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧len∈ℕ1∧front(tr)+len∈WAY"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="stateTTD∈TTD → {OCCUPIED,FREE}"/>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨¬(¬tr∈dom(rear)⇒front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨¬(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨¬p1≥front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧¬rear(tr)≥p0)∨(¬tr∈dom(rear)∧¬front(tr)≥p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨¬¬tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="¬TTD=(∅ ⦂ ℙ(ℙ(ℤ)))"/>
<org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀tr⦂TRAIN,p⦂ℤ,q⦂ℤ,len⦂ℤ,ttds⦂ℙ(ℙ(ℤ)),ttds1⦂ℙ(ℙ(ℤ)),p0⦂ℤ,p1⦂ℤ,q1⦂ℤ·tr∈connectedTrain∼[{TRUE}]∧ttds⊆stateTTD∼[{FREE}]∧union(ttds)=p1 ‥ q1∧p1≥front(tr)∧ttds1⊆TTD∧union(ttds1)=p0 ‥ p1 − 1∧(tr∈dom(rear)⇒rear(tr)≥p0)∧(¬tr∈dom(rear)⇒front(tr)≥p0)∧p ‥ q⊆union(ttds∪ttds1)∧p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∧front(tr)∈p ‥ q∧(tr∈dom(rear)⇒rear(tr)∈p ‥ q)∧len∈ℕ1∧front(tr)+len∈WAY∧(¬tr∈dom(MAtemp)∨¬MAtemp(tr)=p ‥ q)⇒(∀vsss⦂ℙ(ℙ(ℤ)),vsss1⦂ℙ(ℙ(ℤ)),newstateVSS⦂ℙ(ℙ(ℤ)×STATES)·¬newstateVSS∈VSS → {OCCUPIED,FREE,UNKNOW,AMBIGUOUS}∨¬tr∈connectedTrain∼[{TRUE}]∨¬vsss⊆newstateVSS∼[{FREE}]∨¬union(vsss)=p1 ‥ q1∨p1&lt;front(tr)∨¬vsss1⊆VSS∨¬union(vsss1)=p0 ‥ p1 − 1∨(tr∈dom(rear)∧rear(tr)&lt;p0)∨(¬tr∈dom(rear)∧front(tr)&lt;p0)∨¬p ‥ q⊆union(vsss∪vsss1)∨¬p ‥ q∩union(ran({tr} ⩤ MA))=(∅ ⦂ ℙ(ℤ))∨¬front(tr)∈p ‥ q∨(tr∈dom(rear)∧¬rear(tr)∈p ‥ q)∨¬len∈ℕ1∨¬front(tr)+len∈WAY∨tr∈dom(({tr} ⩤ MAtemp)∪{tr ↦ p ‥ q}))"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(rear)⇒rear(tr)&lt;front(tr)"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀tr⦂TRAIN·tr∈dom(MA)⇒(∃p⦂ℤ,q⦂ℤ·p ‥ q⊆WAY∧p≤q∧MA(tr)=p ‥ q)"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
</org.eventb.core.prFile>
